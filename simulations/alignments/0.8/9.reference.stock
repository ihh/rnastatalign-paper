# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:0.8)root;
#=GF ARGS       -seed 1238433044 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238433044
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-ua-L-a-a-S(au-ua-L-u-u-a-u-a)c-a
#=GF BRANCH     Length 1.  Subst to a: c(1), g(2).  Subst to au: uu(1).  Subst to c: u(1).  Subst to cg: ua(1).  Subst to g: a(3), u(1).  Subst to gc: gu(1).  Subst to gu: au(1).  Subst to u: a(1).  Subst to ug: ua(1).  Subst to uu: cg(1).  (root -> node1)
#=GF NODE       S-ug-L-g-u-S(gc-au-L-u-a-a-g-a)c-a
#=GF BRANCH     Length 1.  Subst to a: g(1), u(1).  Subst to c: a(1), u(1).  Subst to cg: ua(1).  Subst to g: a(1).  Subst to u: a(1), g(1).  Subst to ua: ug(1).  (node1 -> X)
#=GF LEAF       S-cg-L-u-u-S(gc-au-L-c-a-a-g-a)c-c
#=GF BRANCH     Length 1.  Subst to a: g(1), u(1).  Subst to c: a(1), u(2).  Subst to cg: gu(1), ug(1).  Subst to g: a(1), u(2).  Subst to gu: gc(1).  Subst to u: a(1), c(3), g(1).  (node1 -> Y)
#=GF LEAF       S-cg-L-g-u-S(cg-au-L-g-c-a-g-a)u-a
#=GF BRANCH     Length 0.8.  Loop insert: L(1).  Subst to a: c(1), g(2), u(2).  Subst to au: gu(1).  Subst to c: u(1).  Subst to cg: au(1), gc(1), ua(4).  Subst to g: a(2), u(1).  Subst to gu: gc(2).  Subst to u: a(2), c(1).  Subst to ua: au(1), cg(1), gu(1), ug(1).  Subst to ug: cg(1).  (root -> Z)
#=GF LEAF       S-cg-L-a-a-S(ua-cg-L-S(ua-au-L-S-au-cg-ua-cg-ua-gc-cg-gu-cg-cg-L-u-a-S(L-a-u-u-g)u-g-g-g-S(L)u)c-u-a-a-a)a-a
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 2 1
#=GF ANCLOOPLEN 5 4
root            uaaau-----------------------------------uuauaaucaa
#=GR root SS    <--<<---------------------------------------->>-->
node1           uguga-----------------------------------uaagauccag
#=GR node1 SS   <--<<---------------------------------------->>-->
X               cuuga-----------------------------------caagaucccg
#=GR X SS       <--<<---------------------------------------->>-->
Y               cguca-----------------------------------gcagauguag
#=GR Y SS       <--<<---------------------------------------->>-->
Z               caaucuaacucugcgccuaauuguggguggugcagaguuacuaaagaaag
#=GR Z SS       <--<<<<<<<<<<<<<<----------->>>>>>>>>>>>----->>-->
#=GC SS_cons    <..<<<<<<<<<<<<<<...........>>>>>>>>>>>>.....>>..>
//
