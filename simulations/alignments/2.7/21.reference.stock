# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:2.7)root;
#=GF ARGS       -seed 1238387708 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238387708
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-L-c-a-a-S(ua-ua-au-gc-cg-ug-L-g-a-g-S(uu-gc-L-u-u-g)c)u-c-S(au-au-ug-L-u-g-a)a-u-g-c
#=GF BRANCH     Length 1.  Subst to a: g(1), u(4).  Subst to au: gc(1), gu(1).  Subst to c: a(2), u(2).  Subst to cg: gc(1), ua(3), ug(2).  Subst to g: a(1), u(3).  Subst to gc: au(2), cg(1), ua(1).  Subst to gu: au(1).  Subst to u: a(2), c(5), g(5).  Subst to ua: au(1), ug(1).  Subst to ug: gc(1), uu(1).  (root -> node1)
#=GF NODE       S-gc-L-u-a-u-S(cg-gc-gc-gc-cg-cg-L-u-a-u-S(cg-ug-L-u-u-c)u)a-c-S(au-cg-cg-L-g-g-c)a-a-g-u
#=GF BRANCH     Length 1.  Loop delete: S(1), a(1).  Start-of-stem insert: S(1).  Stem delete: gc(1).  Subst to a: c(1), g(1), u(2).  Subst to aa: ua(1).  Subst to au: cg(1).  Subst to c: a(2), g(1), u(1).  Subst to cg: ug(1).  Subst to g: u(2).  Subst to gc: au(1), cg(1), uc(1).  Subst to gu: au(1).  Subst to u: a(1), c(2), g(1).  Subst to ua: cg(2).  Subst to uc: gc(1).  Subst to ug: ua(1).  (node1 -> X)
#=GF LEAF       S-cg-gc-L-a-c-u-D(D-D-D-D-D-D-D-D-D-D-D(D-D-D-D-D-D)D)a-a-S(gc-cg-gu-L-g-c-c)D-u-g-u
#=GF BRANCH     Length 1.  Subst to a: c(1), g(2), u(4).  Subst to au: cg(1), ua(1).  Subst to c: u(3).  Subst to cg: ug(3).  Subst to g: a(2), u(2).  Subst to gc: cg(1).  Subst to u: a(3), c(4), g(1).  Subst to ua: cg(1), gc(1).  Subst to ug: cg(3).  (node1 -> Y)
#=GF LEAF       S-I-gc-L-a-g-a-S(gc-gc-gc-au-ug-cg-L-c-a-u-S(ua-au-L-a-u-u)g)u-u-S(au-cg-cg-L-u-u-g)a-a-g-a
#=GF BRANCH     Length 2.7.  Loop delete: u(1).  Loop insert: c(1), g(1), u(1).  Subst to a: c(5), g(5), u(3).  Subst to au: gc(3), gu(1).  Subst to c: a(1), g(4), u(12).  Subst to ca: cg(1), ua(1).  Subst to cg: au(2), ca(1), gc(1), ua(5), ug(4).  Subst to g: a(9), c(2), u(4).  Subst to gc: au(1), cg(3), gu(2).  Subst to gu: au(1), gc(3), uu(1).  Subst to u: a(4), c(8), g(5).  Subst to ua: au(3), cg(3), gc(1), gu(1), ug(2).  Subst to ug: ca(1), cg(2), ua(3).  (root -> Z)
#=GF LEAF       S-I-cg-L-c-g-S(gc-L-g-S(L-u-c-u-a-g-u)S(ua-gc-L)D-g-g-u)a-S(ug-cg-cg-ua-cg-ug-L-c-a-g-S(gu-gc-L-g-g-c-g)g)g-a-S(au-cg-ua-L-u-a-c)a-u-c-c
#=GF ANCSTEMS   4 (total) 4 (nonempty)
#=GF ANCSTEMLEN 2 3 6 1
#=GF ANCLOOPLEN 3 4 3 9
root            -gca----------------auuagcugaguguu-gcucggcuaaucaauugaguuaugcc-
#=GR root SS    -<-------------------<<<<<<---<<---->>->>>>>>--<<<--->>>---->-
node1           -gua----------------ucgggccuaucuuu-cgguggcccgacaccggcgguaaguc-
#=GR node1 SS   -<-------------------<<<<<<---<<---->>->>>>>>--<<<--->>>---->-
X               cgac----------------u------------------------aagcggccugc-ugucg
#=GR X SS       <<---------------------------------------------<<<--->>>---->>
Y               -gag----------------agggauccauuaau-uuagggucccuuaccuuggguaagac-
#=GR Y SS       -<-------------------<<<<<<---<<---->>->>>>>>--<<<--->>>---->-
Z               -ccgggucuaguugcaggucauccucucagggggcgcugggaggggaacuuacaguauccg-
#=GR Z SS       -<--<-------<<>>--->-<<<<<<---<<---->>->>>>>>--<<<--->>>---->-
#=GC SS_cons    <<..<.......<<>>...>.<<<<<<...<<....>>.>>>>>>..<<<...>>>....>>
//
