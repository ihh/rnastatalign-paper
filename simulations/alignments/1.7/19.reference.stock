# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.7)root;
#=GF ARGS       -seed 1238430740 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238430740
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-au-L-c-c-S(cg-gc-gc-L-c-a-S(cg-gc-gc-gc-L-u-a-g-a)u-a-a-c)g-u-a
#=GF BRANCH     Length 1.  Loop delete: c(1).  Subst to a: g(1), u(3).  Subst to au: gc(4), gu(1).  Subst to c: g(1), u(2).  Subst to cg: ug(1).  Subst to g: a(1), c(1), u(1).  Subst to gc: au(3).  Subst to gu: gc(1).  Subst to u: c(2), g(1).  Subst to ua: cg(1).  Subst to ug: cg(1).  (root -> node1)
#=GF NODE       S-gc-gc-L-D-c-S(ua-gc-au-L-c-a-S(cg-gc-au-au-L-a-a-a-a)g-a-a-c)g-a-a
#=GF BRANCH     Length 1.  Subst to a: c(1), u(1).  Subst to au: gc(2).  Subst to c: a(2).  Subst to g: a(2), c(2).  Subst to gc: au(3), gu(2).  Subst to gu: au(1), gc(2).  Subst to u: a(4), c(1), g(1).  (node1 -> X)
#=GF LEAF       S-au-gc-L-D-g-S(ua-gu-gc-L-u-u-S(cg-gc-gc-gc-L-g-a-c-a)u-u-g-u)g-g-a
#=GF BRANCH     Length 1.  Loop delete: c(1).  Loop insert: g(1).  Subst to a: g(1).  Subst to au: gc(3), gu(1).  Subst to cg: au(1), ua(1).  Subst to g: a(2).  Subst to gc: au(1), cg(3), ua(1).  Subst to gu: au(1).  Subst to u: a(3), c(1).  Subst to ua: au(2).  (node1 -> Y)
#=GF LEAF       S-gc-gc-L-D-c-S(gc-au-gc-L-u-a-S(ua-gc-gc-au-L-a-u-g-g)g-c-u-a-D)a-a-u
#=GF BRANCH     Length 1.7.  Loop delete: a(1).  Subst to a: c(5), g(3), u(2).  Subst to au: cg(1), gc(4), gu(1), ua(1).  Subst to c: a(1), g(1), u(3).  Subst to cg: gc(1).  Subst to g: a(5), c(1), u(1).  Subst to gc: gu(1).  Subst to gu: au(2), gc(1).  Subst to u: a(2), c(2), g(2).  Subst to ua: cg(1).  (root -> Z)
#=GF LEAF       S-au-au-L-u-a-S(cg-au-au-L-u-a-S(gc-au-au-gu-L-a-g-g-c)g-I-u-a-D)a-a-a
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 4 3 2
#=GF ANCLOOPLEN 4 6 5
root            gacccggcacggguagacccgu-aacccgguauc
#=GR root SS    <<--<<<--<<<<---->>>>----->>>--->>
node1           gg-cugacacgaaaaaauucgg-aacucagaacc
#=GR node1 SS   <<--<<<--<<<<---->>>>----->>>--->>
X               ag-gugguucggggacacccgu-ugucuaggacu
#=GR X SS       <<--<<<--<<<<---->>>>----->>>--->>
Y               gg-cgaguauggaaugguccagcua-cucaaucc
#=GR Y SS       <<--<<<--<<<<---->>>>----->>>--->>
Z               aauacaauagaagaggcuuucg-ua-uugaaauu
#=GR Z SS       <<--<<<--<<<<---->>>>----->>>--->>
#=GC SS_cons    <<..<<<..<<<<....>>>>.....>>>...>>
//
