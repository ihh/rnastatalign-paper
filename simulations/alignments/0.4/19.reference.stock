# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:0.4)root;
#=GF ARGS       -seed 1240137259 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240137259
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-L-g-g-S(cg-gu-ua-ug-cg-L-a-g-a-a-a-u)c-a-S(L-a-g-u-u-g-a-c-a-a)a
#=GF BRANCH     Length 1.  Loop insert: g(1).  Subst to a: c(1), g(2).  Subst to c: a(2), u(3).  Subst to g: a(2).  Subst to gc: gu(1).  Subst to gu: gc(1).  Subst to u: a(1), c(1), g(1).  Subst to ua: cg(2), gu(1).  (root -> X)
#=GF LEAF       S-ua-L-g-a-a-S(ua-gc-ua-ug-ua-L-g-a-c-a-g-c)c-u-S(L-a-u-u-c-g-a-c-a-a)a
#=GF BRANCH     Length 1.  Loop insert: u(1).  Subst to a: c(1), g(5).  Subst to au: gu(1).  Subst to c: a(1), g(1), u(7).  Subst to cg: ua(1), ug(1).  Subst to g: a(8), c(2), u(2).  Subst to gc: gu(1), ua(1).  Subst to gu: gc(1).  Subst to u: a(3), c(7), g(1).  Subst to ua: cg(3), ug(1).  Subst to ug: ua(1).  (root -> Y)
#=GF LEAF       S-gc-L-g-g-I-S(au-gc-cg-ua-ua-L-g-u-c-g-u-g-a)a-a-S(L-a-g-u-g-g-a-u-g-u)g
#=GF BRANCH     Length 0.4.  Subst to a: c(1), g(2).  Subst to au: gu(1).  Subst to c: a(1), g(1), u(1).  Subst to cg: ug(1).  Subst to g: a(1), u(1).  Subst to u: a(2), c(1).  (root -> Z)
#=GF LEAF       S-gc-L-u-u-I-S(cg-au-ua-cg-cg-L-a-g-a-u-a-a-I)c-a-S(L-a-g-u-g-g-a-c-a-c)a
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 0 5 1
#=GF ANCLOOPLEN 6 9 5
root            ggg-cguucagaaau-ggaugcaaguugacaaac
#=GR root SS    <..-<<<<<......->>>>>............>
X               ugaauguuugacagc-agacacuauucgacaaaa
#=GR X SS       <...<<<<<......->>>>>............>
Y               ggg-agcuugucgugaaagcuaaaguggaugugc
#=GR Y SS       <..-<<<<<.......>>>>>............>
Z               guu-cauccagauaa-ggaugcaaguggacacac
#=GR Z SS       <..-<<<<<......->>>>>............>
#=GC SS_cons    <...<<<<<.......>>>>>............>
//
