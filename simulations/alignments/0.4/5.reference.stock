# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:0.4)root;
#=GF ARGS       -seed 1240115156 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240115156
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-cg-cg-ua-au-L-c-S(cg-L-a-a-a-a-a-u-g-a-a)u-u-g-g-a-c
#=GF BRANCH     Length 1.  Subst to a: g(2), u(1).  Subst to au: gc(1).  Subst to c: a(2), g(1), u(1).  Subst to cg: gg(1), ua(2).  Subst to g: a(1), u(2).  Subst to gc: ua(1).  Subst to gg: cg(1).  Subst to gu: cg(2).  Subst to u: a(1), c(3), g(1).  Subst to ua: cg(2).  (root -> X)
#=GF LEAF       S-gu-cg-gu-au-L-u-S(au-L-a-a-c-a-g-u-g-a-a)a-u-c-u-a-c
#=GF BRANCH     Length 1.  Loop delete: g(1).  Loop insert: a(1), g(1).  Subst to a: c(1), u(4).  Subst to au: gc(1).  Subst to c: u(4).  Subst to cg: ug(1).  Subst to g: a(4), c(1), u(2).  Subst to gc: cg(1), gu(1), ug(1).  Subst to gu: au(1).  Subst to u: a(4), g(2).  Subst to ug: cg(2).  (root -> Y)
#=GF LEAF       S-cg-gc-ua-gc-L-c-S(au-L-g-g-a-c-a-a-S(L-a-g-c-a-a-u-c-c-u)a-D-g-u)a-g-a-g-a-g
#=GF BRANCH     Length 0.4.  Loop delete: a(1), u(1).  Subst to au: ua(1).  Subst to u: a(1), c(2).  Subst to ua: cg(1), ug(1).  Subst to ug: cg(1).  (root -> Z)
#=GF LEAF       S-au-ua-ua-au-L-D-S(cg-L-a-u-I-a-D-a-I(I-I-I-I-I-I-I-I-I-I)u-g-a-a)u-u-g-g-a-u
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 1 4
#=GF ANCLOOPLEN 9 7
root            ccuaccaa-aaa---------ugaaguuggacuagg
#=GR root SS    <<<<.<..-...---------....>......>>>>
X               gcgauaaa-cag---------ugaauaucuacuugu
#=GR X SS       <<<<.<..-...---------....>......>>>>
Y               cgugcaggacaaagcaauccua-guuagagagcacg
#=GR Y SS       <<<<.<................-..>......>>>>
Z               auua-cau-a-a---------ugaaguuggauuaau
#=GR Z SS       <<<<-<..-.-.---------....>......>>>>
#=GC SS_cons    <<<<.<...................>......>>>>
//
