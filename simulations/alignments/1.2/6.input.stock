# STOCKHOLM 1.0
#=GF         NH ((X:1,Y:1):1,Z:1.2)root;
#=GF       ARGS -seed 1238414458 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF       SEED 1238414458
#=GF      PARAM stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF      PARAM lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF       ROOT S-au-gu-cg-cg-cg-cg-L-S(cg-gu-ua-L-a-a-a)c-g-u-g-g-a-S(gu-cg-cg-au-L-a-a-a-g-g-c)a
#=GF     BRANCH Length 1.  Loop delete: g(1).  Subst to a: c(1), g(2), u(2).  Subst to au: cg(2), gc(1), gu(2).  Subst to c: u(2).  Subst to cg: au(1), ua(1).  Subst to g: c(1).  Subst to gc: cg(1), gu(1).  Subst to gu: au(3).  Subst to u: a(1), g(3).  Subst to ua: au(1), cg(2).  (root -> node1)
#=GF       NODE S-gu-gu-cg-au-au-ua-L-S(cg-gu-gc-L-a-a-a)a-c-a-a-a-u-S(ua-ua-cg-cg-L-a-a-a-a-D-c)a
#=GF     BRANCH Length 1.  Loop insert: L(1).  Subst to a: c(1).  Subst to au: gu(2), ua(1).  Subst to c: u(1).  Subst to cc: cg(1).  Subst to cg: gu(1), ua(3), ug(1).  Subst to g: a(1), u(1).  Subst to gc: gu(1).  Subst to gu: au(2).  Subst to u: a(2).  Subst to ua: cg(1), ug(2), uu(1).  Subst to uc: gc(1).  Subst to ug: cg(2), ua(1).  Subst to uu: uc(1).  (node1 -> X)
#=GF       LEAF S-au-cg-cc-cg-gu-au-L-S(cg-au-gc-L-c-a-u-g)a-a-a-a-a-c-S(cg-ua-ua-cg-L-a-g-a-a-D-c)a
#=GF     BRANCH Length 1.  Loop insert: c(1).  Stem delete: au(1).  Subst to a: c(1), g(1).  Subst to au: gc(1).  Subst to c: u(2).  Subst to cu: ua(1).  Subst to g: a(5), u(1).  Subst to gc: au(1), gu(4), ua(1).  Subst to gu: cu(1), gc(1).  Subst to u: a(2), c(1), g(1).  Subst to ua: gu(1).  Subst to ug: cg(1), ua(1).  (node1 -> Y)
#=GF       LEAF S-gc-gc-cg-gc-D-ug-L-S(cg-au-gc-L-I-g-a-g)a-a-u-a-g-c-c-S(ua-gc-cg-ug-L-a-u-a-g-D-c)a
#=GF     BRANCH Length 1.2.  Loop insert: S(1).  Subst to a: g(6), u(3).  Subst to aa: ac(1).  Subst to ac: au(1).  Subst to au: aa(1), gc(1), gu(1).  Subst to c: g(1), u(1).  Subst to cg: au(1), gc(2), gu(1), ug(1).  Subst to g: a(2), u(2).  Subst to gc: cg(1), gu(3), ua(1).  Subst to gu: au(1), gc(1).  Subst to u: a(4), c(3), g(2).  Subst to ua: cg(2), ug(2).  Subst to ug: cg(2), ua(1).  (root -> Z)
#=GF       LEAF S-au-cg-cg-cg-ua-ua-L-S(ua-cg-gc-L-I-a-u-a)S(cg-ua-L-a-c-a-u-a-g-a-g-a-g-a-a-u)c-a-g-u-g-c-I-S(au-cg-cg-cg-L-u-a-a-g-a-u)a
#=GF   ANCSTEMS 3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 4 3 6
#=GF ANCLOOPLEN 3 6 7
      X         acccgacagcaugcugaaaaaccuucagaacgaagauugcgu
#=GR X       SS <<<<<<<<<....>>>......<<<<.....>>>>.>>>>>>
      Y         ggcgucaggagcugaauagccugcuauagcggcaagcgcc
#=GR Y       SS <<<<<<<<...>>>.......<<<<.....>>>>.>>>>>
      Z         acccuuucgauacgacuacauagagagaauagcagugcacccuaagauggguaaagggu
#=GR Z       SS <<<<<<<<<...>>><<.............>>......<<<<......>>>>.>>>>>>

//
