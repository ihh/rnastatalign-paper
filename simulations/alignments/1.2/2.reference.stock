# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:1.2)root;
#=GF ARGS       -seed 1240120863 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240120863
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-cg-gu-gc-cg-ug-au-au-L-a-g-S(cg-L-a-u-c)c-g-a-a-c-a-a-u
#=GF BRANCH     Length 1.  Loop insert: c(1).  Subst to a: c(1), g(3), u(1).  Subst to au: gu(1).  Subst to g: a(3), u(2).  Subst to gc: au(1).  Subst to u: a(1), c(1).  Subst to ua: ug(1).  Subst to ug: gc(1).  (root -> X)
#=GF LEAF       S-cg-au-ug-cg-ua-gc-au-L-a-g-S(cg-L-a-a-c-g)g-a-a-g-g-a-u-a
#=GF BRANCH     Length 1.  Loop delete: c(1).  Subst to a: g(1), u(3).  Subst to au: gu(1).  Subst to ca: cg(1).  Subst to cg: gc(1), ug(2).  Subst to g: a(3), u(1).  Subst to gc: au(1), gu(2).  Subst to gu: au(1), ca(1).  Subst to u: a(1), c(2), g(4).  Subst to ua: cg(2).  Subst to ug: ua(1).  (root -> Y)
#=GF LEAF       S-gc-gc-cg-cg-cg-au-gc-L-g-u-S(ua-L-a-a-u-I)D-a-u-a-u-u-a-a
#=GF BRANCH     Length 1.2.  Loop insert: L(1).  Subst to a: g(2).  Subst to au: gc(1), gu(1), ua(1).  Subst to c: u(3).  Subst to cg: au(1), ug(1).  Subst to g: a(4), u(1).  Subst to gc: au(1).  Subst to gu: au(1).  Subst to u: a(1), c(3), g(1).  Subst to ua: au(1), cg(1).  (root -> Z)
#=GF LEAF       S-cg-gc-cg-cg-cg-au-gu-L-c-a-S(ua-L-a-a-u-c-I)u-c-a-g-u-g-g-g
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 1 7
#=GF ANCLOOPLEN 3 10
root            cggcuaaagc-auc-gcgaacaauuuggcug
#=GR root SS    <<<<<<<..<-...->........>>>>>>>
X               caucugaagc-aacgggaaggauaucaggug
#=GR X SS       <<<<<<<..<-....>........>>>>>>>
Y               ggcccagguu-aau-a-auauuaacugggcc
#=GR Y SS       <<<<<<<..<-...->-.......>>>>>>>
Z               cgcccagcauaauc-aucaguggguugggcg
#=GR Z SS       <<<<<<<..<....->........>>>>>>>
#=GC SS_cons    <<<<<<<..<.....>........>>>>>>>
//
