# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.2)root;
#=GF ARGS       -seed 1237866382 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1237866382
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-au-L-c-S(ua-gu-au-gc-L-c-c-g-c-S-au-cg-L-a-u-a-a-u-a-g-c)u-a-a-c
#=GF BRANCH     Length 1.  Subst to a: c(1), u(2).  Subst to au: gu(1).  Subst to c: g(1), u(4).  Subst to cg: ua(2).  Subst to g: a(3), c(1), u(1).  Subst to gc: au(2), gu(1).  Subst to gu: gc(1).  Subst to u: a(2), c(6).  Subst to ua: au(1), cg(1), ug(1).  Subst to ug: cg(1).  (root -> node1)
#=GF NODE       S-cg-L-u-S(ua-au-gc-gc-L-g-c-g-c-S-gc-ua-L-u-a-g-g-c-u-g-g)a-a-a-u
#=GF BRANCH     Length 1.  Loop delete: g(1).  Subst to au: gc(1), ua(1).  Subst to c: g(1), u(2).  Subst to ca: ua(1).  Subst to cg: au(2), ua(1).  Subst to g: c(1).  Subst to u: a(1), c(1).  Subst to ua: au(1), gc(1).  Subst to ug: cg(1).  (node1 -> X)
#=GF LEAF       S-ug-L-u-S(ua-ca-gc-cg-L-g-g-g-c-S-cg-cg-L-u-a-g-c-c-u-D-g)a-c-a-u
#=GF BRANCH     Length 1.  Loop delete: g(2).  Loop insert: L(1).  Subst to a: g(3), u(2).  Subst to au: gc(2).  Subst to cg: ua(1), ug(1).  Subst to g: a(1), c(1), u(1).  Subst to u: c(1), g(1).  Subst to ug: cg(1).  (node1 -> Y)
#=GF LEAF       S-cg-L-a-S(ua-au-au-gc-L-g-u-a-u-S-au-cg-L-u-a-a-g-a-c-D-D-a)a-g-a-u
#=GF BRANCH     Length 1.2.  Loop delete: g(1).  Loop insert: c(1).  Subst to a: c(2), g(3).  Subst to au: gc(1).  Subst to c: a(3), g(1), u(2).  Subst to cg: ua(1), ug(1).  Subst to g: a(1), c(1), u(2).  Subst to gc: au(1), gu(1).  Subst to gu: gc(1).  Subst to u: a(1), c(2).  Subst to ua: au(1).  Subst to ug: cg(1).  (root -> Z)
#=GF LEAF       S-au-L-a-S(cg-gu-au-gc-L-D-u-a-c-S-ua-cg-L-I-c-c-c-a-u-a-g-c-a)a-a-c-c
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 2 4 1
#=GF ANCLOOPLEN 8 4 5
root            acugagccgcac-auaauagc-gucuuauaacu
#=GR root SS    <-<<<<----<<---------->>>>>>---->
node1           cuuagggcgcgu-uaggcugg-acccuaaaaug
#=GR node1 SS   <-<<<<----<<---------->>>>>>---->
X               uuucgcgggccc-uagccu-g-gggcaaacaug
#=GR X SS       <-<<<<----<<---------->>>>>>---->
Y               cauaagguauacuaagac--a-gucuuaagaug
#=GR Y SS       <-<<<<----<<---------->>>>>>---->
Z               aacgag-uacuc-cccauagcagacuugaaccu
#=GR Z SS       <-<<<<----<<---------->>>>>>---->
#=GC SS_cons    <.<<<<....<<..........>>>>>>....>
//
