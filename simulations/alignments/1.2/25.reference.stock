# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:1.2)root;
#=GF ARGS       -seed 1240092321 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240092321
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-ua-L-g-a-S(cg-cg-au-L-u-c-a-a-a-u)a-c-S(gu-cg-au-gc-gc-L-c-a-g-c-c)c-a-c-a
#=GF BRANCH     Length 1.  Loop insert: u(1).  Subst to a: u(1).  Subst to au: gc(1), gu(1).  Subst to c: a(1), u(4).  Subst to cg: au(1), gc(1).  Subst to gc: ua(1).  Subst to gu: au(2).  Subst to u: a(1), c(8).  Subst to ua: cg(1), gu(2).  Subst to ug: cg(1).  (root -> X)
#=GF LEAF       S-cg-gc-L-g-a-S(cg-ua-ua-L-c-a-a-a-a-u)u-c-S(ua-cg-ug-gc-au-L-u-u-a-g-u-c)u-c-u-a
#=GF BRANCH     Length 1.  Stem delete: au(1), ua(1).  Subst to a: c(1), g(1), u(1).  Subst to au: gc(2).  Subst to c: u(6).  Subst to cg: ug(1).  Subst to g: a(2), c(1), u(1).  Subst to gc: gu(2).  Subst to gu: gc(1).  Subst to u: a(3), c(7), g(2).  Subst to ua: au(1).  Subst to ug: cg(2).  (root -> Y)
#=GF LEAF       S-ua-D-L-a-a-S(cg-ug-D-L-a-u-u-u-g-g)u-g-S(gc-cg-au-gc-au-L-c-I-a-c-a-u)c-c-u-a
#=GF BRANCH     Length 1.2.  Loop delete: a(2).  Loop insert: S(1).  Subst to a: c(3), g(2), u(2).  Subst to au: gc(2).  Subst to c: a(1), g(1), u(3).  Subst to cg: gc(1), ua(2), ug(1).  Subst to g: a(2), c(3), u(2).  Subst to gc: cg(1), gu(1).  Subst to u: a(2), c(5), g(1).  Subst to ua: au(1), cg(1).  Subst to ug: cg(2).  (root -> Z)
#=GF LEAF       S-gc-cg-L-a-a-S(ug-ua-au-L-a-D-a-g-a-u)a-g-a-S(au-au-cg-cg-gc-L-u-I-c-g-g-g)u-g-a-D
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 5 3 2
#=GF ANCLOOPLEN 6 5 8
root            gugaccaucaaauugg-acgcaggc-agccccugucacaac
#=GR root SS    <<..<<<......>>>-..<<<<<.-....>>>>>....>>
X               cggacuucaaaauaag-ucucugauuagucucggaucuacg
#=GR X SS       <<..<<<......>>>-..<<<<<......>>>>>....>>
Y               u-aacu-auuugg-gg-uggcagac-acauucugcccua-a
#=GR Y SS       <-..<<-......->>-..<<<<<.-....>>>>>....->
Z               gcaauuaa-agauuagagaaaccgu-cgggcgguuuga-gc
#=GR Z SS       <<..<<<.-....>>>...<<<<<.-....>>>>>...->>
#=GC SS_cons    <<..<<<......>>>...<<<<<......>>>>>....>>
//
