# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.2)root;
#=GF ARGS       -seed 1238433414 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238433414
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-cg-cg-gc-cg-cg-cg-gc-cg-ua-ug-L-a-S(ua-au-cg-cg-cg-gc-L-a-c-S(L-g-u-c-g-a)a-c-a)g-g-u-a-g-g-a
#=GF BRANCH     Length 1.  Loop delete: g(1).  Subst to a: g(2), u(1).  Subst to au: gc(1), gu(1).  Subst to c: a(1), u(1).  Subst to cg: ua(4).  Subst to g: a(3), u(2).  Subst to gc: cg(3).  Subst to gu: gc(1).  Subst to u: a(1), c(2), g(1).  Subst to ua: au(1), cg(1), gc(2), ug(2).  Subst to ug: cg(1).  (root -> node1)
#=GF NODE       S-cg-ua-gc-gc-cg-cg-ua-gc-cg-cg-cg-L-g-S(ua-au-ua-cg-cg-au-L-a-g-S(L-a-g-c-D-g)c-c-a)g-u-u-g-g-a-a
#=GF BRANCH     Length 1.  Loop delete: c(1).  Subst to a: c(2), g(1).  Subst to aa: ua(1).  Subst to au: cg(1), gc(2), gu(2).  Subst to c: g(3), u(3).  Subst to cg: gc(1), ua(1).  Subst to g: a(1), c(1), u(2).  Subst to gc: cg(3).  Subst to gu: au(2).  Subst to u: a(2), c(2), g(3).  Subst to ua: cg(2).  Subst to ug: cg(1), ua(1).  (node1 -> X)
#=GF LEAF       S-au-ua-gc-au-gc-cg-cg-au-ug-ua-aa-L-g-S(ua-au-ug-gc-cg-au-L-a-c-S(L-a-g-D-D-a)u-g-u)a-c-u-g-c-a-u
#=GF BRANCH     Length 1.  Loop delete: a(1).  Loop insert: g(1), u(1).  Subst to a: g(4), u(1).  Subst to au: gc(1), gu(1).  Subst to c: u(2).  Subst to ca: ua(1).  Subst to cg: ua(3), ug(1).  Subst to g: a(7), c(1).  Subst to gc: ua(1).  Subst to gu: gc(1).  Subst to u: a(1), c(2), g(1).  Subst to ua: au(2), ca(1), gc(1), ug(2).  Subst to ug: cg(2), ua(1).  (node1 -> Y)
#=GF LEAF       S-cg-cg-cg-gc-cg-cg-ua-au-cg-cg-cg-L-g-S(ua-au-ua-cg-cg-ua-L-g-u-g-S(L-D-g-c-D-c)a-u-u-g)g-g-u-g-g-a-g
#=GF BRANCH     Length 1.2.  Loop delete: a(1).  Loop insert: L(1), g(1), u(1).  Subst to a: g(3), u(1).  Subst to au: cg(2), ua(1).  Subst to c: a(1), g(2), u(2).  Subst to cg: gc(2), ua(4).  Subst to g: a(1), c(1).  Subst to gc: au(1).  Subst to gu: au(1), gc(1).  Subst to u: a(2), c(4), g(1).  Subst to ua: cg(5), ug(2).  Subst to ug: cg(1).  (root -> Z)
#=GF LEAF       S-gu-gc-au-gc-cg-ua-cg-cg-ua-ua-ua-L-a-S(cg-au-cg-gu-cg-cg-L-u-I-c-S(L-g-g-g-u-u-a-a)g-u-I-a)u-c-c-D-u-g-a-a
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 0 6 11
#=GF ANCLOOPLEN 5 5 8
root            gccgcccgcuuauacccga-c-g-ucgaac-acggguagguag-gagagcgggcggc
#=GR root SS    <<<<<<<<<<<-<<<<<<-------------->>>>>>-------->>>>>>>>>>>
node1           cuggccugcccguauccaa-g-a-gc-gcc-auggauaguugg-aagggcaggccag
#=GR node1 SS   <<<<<<<<<<<-<<<<<<-------------->>>>>>-------->>>>>>>>>>>
X               augagccauuaguaugcaa-c-a-g--aug-uugcguaacugc-auaaguggcucau
#=GR X SS       <<<<<<<<<<<-<<<<<<-------------->>>>>>-------->>>>>>>>>>>
Y               cccgccuacccguauccugug---gc-cauugaggauaggugg-agggguaggcggg
#=GR Y SS       <<<<<<<<<<<-<<<<<<-------------->>>>>>-------->>>>>>>>>>>
Z               ggagcuccuuuacacgccu-cggguuaagu-aggugugucc-ugaaaaaggagcucu
#=GR Z SS       <<<<<<<<<<<-<<<<<<-------------->>>>>>-------->>>>>>>>>>>
#=GC SS_cons    <<<<<<<<<<<.<<<<<<..............>>>>>>........>>>>>>>>>>>
//
