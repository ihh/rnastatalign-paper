# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.2)root;
#=GF ARGS       -seed 1238420661 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238420661
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-L-a-S(cg-ua-gc-cg-cg-L-u-u-u-c-c-S(au-cg-gc-cg-cg-gc-gc-gc-L-c-a-g-g-a)c-a-u)c-c-c-c-g-g-u-c-g
#=GF BRANCH     Length 1.  Loop delete: a(1).  Subst to a: c(1), g(4), u(1).  Subst to au: cg(2), gc(2), gu(1), ua(1).  Subst to c: g(3), u(4).  Subst to cg: gc(1), ua(1), ug(1).  Subst to g: a(2), u(4).  Subst to gc: au(1), gu(1).  Subst to gu: au(3).  Subst to u: a(1), c(11).  Subst to ua: gc(2).  Subst to ug: cg(1).  (root -> node1)
#=GF NODE       S-L-g-S(cg-cg-ua-au-gc-L-u-g-u-u-u-S(au-cg-au-cg-cg-cg-gc-gu-L-u-g-D-g-a)c-a-u)c-a-a-c-c-a-u-u-a
#=GF BRANCH     Length 1.  Loop insert: c(1).  Subst to a: c(2), g(2), u(4).  Subst to au: gu(2), ua(1).  Subst to c: a(1), u(3).  Subst to cg: au(1), ua(1).  Subst to g: a(4), u(2).  Subst to gc: ua(2), ug(1).  Subst to gu: gc(2).  Subst to u: c(3), g(2).  Subst to ua: cg(2), gc(1).  Subst to ug: cg(1).  (node1 -> X)
#=GF LEAF       S-L-g-S(cg-gc-cg-au-gu-L-c-a-g-a-a-S(au-cg-au-cg-cg-gc-au-au-L-a-g-D-g-a)u-a-a)c-c-g-a-u-u-g-u-g-a
#=GF BRANCH     Length 1.  Loop insert: S(1), u(1).  Subst to a: g(4), u(1).  Subst to au: gc(1).  Subst to c: u(7).  Subst to ca: cg(1).  Subst to cg: gc(1), gu(1), ua(1), ug(1).  Subst to g: a(2), c(2), u(1).  Subst to gc: cg(1), gu(1), ua(1).  Subst to gu: au(1).  Subst to u: a(1), c(7).  Subst to ua: au(1), cg(2).  Subst to ug: gc(1).  (node1 -> Y)
#=GF LEAF       S-L-g-S(cg-ua-gc-au-cg-L-g-a-u-u-g-S(ca-cg-ua-gc-cg-cg-au-cg-L-u-c-a-D-g-a)a-u-a-g)c-a-a-g-u-I-a-u-u-a
#=GF BRANCH     Length 1.2.  Loop delete: c(1).  Loop insert: L(1).  Stem delete: ua(1).  Subst to a: c(4), g(1), u(2).  Subst to au: cg(1), gc(3).  Subst to c: g(1), u(5).  Subst to cg: gc(2), ua(1).  Subst to g: a(3), c(2), u(1).  Subst to gc: au(1), cg(2), gu(1), ua(1).  Subst to gu: au(1).  Subst to u: a(2), c(5), g(6).  Subst to ua: au(1), cg(1), gc(1), ug(1).  Subst to ug: cg(1).  (root -> Z)
#=GF LEAF       S-L-u-S(D-ua-cg-cg-gc-L-a-c-u-a-D-a-S(ua-cg-gc-au-cg-gc-gc-au-L-c-I-a-g-u-u)I-g-a-u)u-c-u-a-u-I-u-a-u-g
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 8 5 0
#=GF ANCLOOPLEN 5 8 10
root            acugcc-uuuccacgccgggc-aggacccggcgu-cauggcagccccg-gucg
#=GR root SS    -<<<<<------<<<<<<<<------>>>>>>>>---->>>>>----------
node1           gccuag-uguuuacacccggu-g-gaucgggugu-caucuaggcaacc-auua
#=GR node1 SS   -<<<<<------<<<<<<<<------>>>>>>>>---->>>>>----------
X               gcgcag-cagaaacaccgaaa-g-gauucggugu-uaauugcgccgauuguga
#=GR X SS       -<<<<<------<<<<<<<<------>>>>>>>>---->>>>>----------
Y               gcugac-gauugccugccacuca-gaguggcagaauaggucagcaagu-auua
#=GR Y SS       -<<<<<------<<<<<<<<------>>>>>>>>---->>>>>----------
Z               u-uccgacua-aucgacggac-aguuuccgucga-gaucgga-ucuau-uaug
#=GR Z SS       --<<<<------<<<<<<<<------>>>>>>>>---->>>>-----------
#=GC SS_cons    .<<<<<......<<<<<<<<......>>>>>>>>....>>>>>..........
//
