# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.2)root;
#=GF ARGS       -seed 1238501989 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238501989
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-ua-ug-cg-L-a-S(cg-L-a-u-g-g-g-a-a)g-a-g-S(gu-ug-L-a-u-S(cg-L-a-c-u-u-u-c-a)u-u-u)u-g-a-a-c-a
#=GF BRANCH     Length 1.  Loop delete: g(1), u(1).  Subst to a: g(4), u(2).  Subst to au: gu(1).  Subst to c: a(2), u(5).  Subst to cg: ua(1), ug(2).  Subst to g: a(5), c(2), u(2).  Subst to gu: au(1).  Subst to u: c(4), g(2).  Subst to ua: cg(2).  (root -> node1)
#=GF NODE       S-ua-cg-cg-L-a-S(ua-L-a-g-a-g-a-g-g)D-a-g-S(gu-cg-L-a-c-S(cg-L-c-D-c-g-u-g-a)u-g-c)u-u-a-a-u-a
#=GF BRANCH     Length 1.  Loop delete: u(1).  Subst to a: c(1), g(3), u(5).  Subst to au: gu(1).  Subst to c: a(2), u(4).  Subst to cg: ua(1), ug(1).  Subst to g: a(7), u(1).  Subst to gc: cg(1), gu(1).  Subst to gu: au(1).  Subst to u: a(3), c(4), g(2).  Subst to ug: cg(1).  (node1 -> X)
#=GF LEAF       S-cg-cg-cg-L-a-S(ua-L-a-D-a-u-c-g-g)D-c-g-S(gc-gc-L-a-c-S(cg-L-c-D-g-g-g-g-g)g-g-u)a-u-a-c-a-g
#=GF BRANCH     Length 1.  Loop delete: a(1).  Loop insert: g(1).  Subst to a: c(2), g(6), u(2).  Subst to ag: cg(1).  Subst to au: cg(1), gu(2), ua(1).  Subst to c: a(1), g(3), u(1).  Subst to cg: ua(1).  Subst to g: a(3), c(4), u(1).  Subst to gc: cg(1).  Subst to gu: au(1).  Subst to u: a(5), c(1), g(1).  Subst to ua: ag(1).  Subst to ug: ua(1).  (node1 -> Y)
#=GF LEAF       S-cg-cg-au-L-g-S(ug-L-a-u-u-c-u-u-a)D-g-g-c-S(au-au-L-a-g-S(gc-L-u-D-a-u-u-u-a)g-a-a)g-u-a-a-a-D
#=GF BRANCH     Length 1.2.  Loop delete: a(1), c(1).  Loop insert: u(2).  Subst to a: c(2), g(3), u(7).  Subst to au: cg(1), gc(1), ua(1).  Subst to c: a(3), u(7).  Subst to cg: ua(1), ug(2).  Subst to g: a(4), c(2), u(4).  Subst to gc: au(4), cg(1), gu(1), ua(1), ug(1).  Subst to u: a(6), c(10), g(1).  Subst to ua: cg(1), ug(1).  Subst to ug: ua(1).  (root -> Z)
#=GF LEAF       S-gc-gc-cg-L-a-S(gc-L-a-g-g-u-a-g-u)a-a-g-I-S(gc-cg-L-u-u-S(cg-L-D-g-a-u-a-a-a)a-g-S(gc-gc-L-a-u-S-cg-cg-gc-L-a-u-a-S(L-g-c)g-u-u-c-g-c-u-u)g)g-g-u-u-a-D
#=GF ANCSTEMS   4 (total) 4 (nonempty)
#=GF ANCSTEMLEN 1 2 1 3
#=GF ANCLOOPLEN 7 7 5 10
root            uucacaugggaaggag-guaucacuuucaguu-------------------------uguugaacagga
#=GR root SS    <<<-<------->----<<--<------->---------------------------->>------>>>
node1           uccauagagagga-ag-gcaccc-cgugagug-------------------------cguuuaauagga
#=GR node1 SS   <<<-<------->----<<--<------->---------------------------->>------>>>
X               cccaua-aucgga-cg-ggaccc-gggggggg-------------------------uccauacagggg
#=GR X SS       <<<-<------->----<<--<------->---------------------------->>------>>>
Y               ccaguauucuuag-ggcaaaggu-auuuacga-------------------------auuguaaa-ugg
#=GR Y SS       <<<-<------->----<<--<------->---------------------------->>------>>>
Z               ggcagagguagucaag-gcuuc-gauaaagagggauccgauagcguucgcuucggccggcgguua-gcc
#=GR Z SS       <<<-<------->----<<--<------->--<<--<<<------------->>>>>->>------>>>
#=GC SS_cons    <<<.<.......>....<<..<.......>..<<..<<<.............>>>>>.>>......>>>
//
