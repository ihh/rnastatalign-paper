# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1)root;
#=GF ARGS       -seed 1238423755 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238423755
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-cg-gc-cg-ua-cg-gg-gu-au-gc-gu-cg-L-S(cg-cg-cg-L-u-c-c-S(au-au-L-c-u-a-g-a-g-u)u)a-u-c-c-c-u-a
#=GF BRANCH     Length 1.  Loop delete: c(1).  Loop insert: L(1).  Start-of-stem insert: S(1).  Subst to a: g(2), u(3).  Subst to au: cg(1), gc(1), gu(1).  Subst to c: a(1).  Subst to ca: cg(1).  Subst to cg: au(1), ua(1), ug(3), uu(1).  Subst to g: a(2), u(4).  Subst to gc: au(2), gu(1).  Subst to u: a(3), c(2), g(1).  Subst to ug: cg(6).  Subst to uu: gg(1).  (root -> node1)
#=GF NODE       S-au-gc-cg-cg-ca-ug-cg-au-gc-gc-cg-L-S(ug-ug-cg-L-u-u-c-S(cg-au-gc-L-g-D-u-a-a-u-u-g)c)a-g-c-g-c-g-g
#=GF BRANCH     Length 1.  Loop delete: c(1).  Loop insert: g(1).  Subst to a: g(2), u(2).  Subst to au: cg(1), gc(1), gu(3).  Subst to c: a(2), u(3).  Subst to cg: ca(1), gc(1).  Subst to g: a(1), u(3).  Subst to gc: au(2), cg(2).  Subst to gu: au(1), gc(2), ug(1).  Subst to u: a(1), c(4), g(1).  Subst to ua: cg(3), ug(2).  (node1 -> X)
#=GF LEAF       S-au-ua-ua-ua-gc-au-cg-gc-au-gu-cg-L-S(ua-ua-gc-L-c-u-c-S(au-gc-au-L-g-D-a-D-u-u-a-g)c)g-g-c-g-a-g-g-a
#=GF BRANCH     Length 1.  Loop delete: c(1).  Stem delete: cg(1).  Subst to a: g(3), u(5).  Subst to au: cg(1), gu(1).  Subst to c: a(1), g(1), u(4).  Subst to cg: gc(2), ua(1), ug(1).  Subst to g: a(4), c(2), u(2).  Subst to gc: au(2).  Subst to gu: au(1), gc(1), ug(1).  Subst to u: c(4), g(6).  Subst to ua: ca(1), ug(2).  Subst to ug: cg(1).  (node1 -> Y)
#=GF LEAF       S-au-gc-cg-cg-au-gu-cg-gu-gc-D-cg-L-S(ua-ua-cg-L-u-g-c-S(cg-gc-cg-L-a-D-a-g-a-g-a-a)D)c-u-g-c-I-u-a-u
#=GF BRANCH     Length 1.  Loop delete: a(1), c(1).  Subst to a: c(2), g(2), u(2).  Subst to au: cg(1).  Subst to c: a(2), u(1).  Subst to ca: uu(1).  Subst to cg: ca(1), ua(2), ug(1).  Subst to g: a(2), u(2).  Subst to gc: au(1), gg(1).  Subst to gu: au(1).  Subst to u: c(4), g(2).  Subst to ua: cg(7), ug(1).  Subst to ug: cg(1), gc(1), ua(1).  Subst to uu: ua(1).  (root -> Z)
#=GF LEAF       S-au-gc-ua-ua-ug-gc-gu-au-gc-gu-ua-L-S(cg-cg-ua-L-u-a-c-S(I-gu-ua-L-I-c-u-a-g-g-u-D)a)a-u-u-a-I-u-D-u
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 2 3 11
#=GF ANCLOOPLEN 7 4 7
root            cgcucggaggccccucc-aa-cuagaguuu-ugggaucc-cuagucuuggagcg
#=GR root SS    <<<<<<<<<<<<<<----<<-------->>-->>>-------->>>>>>>>>>>
node1           agcccucaggcuucuuccagg-uaauugcugcgggagcg-cgggccuggaggcu
#=GR node1 SS   <<<<<<<<<<<<<<---<<<-------->>>->>>-------->>>>>>>>>>>
X               auuugacgagcuugcucagag-a-uuagucuccaaggcgaggaguucgucaaau
#=GR X SS       <<<<<<<<<<<<<<---<<<-------->>>->>>-------->>>>>>>>>>>
Y               agccagcgg-cuucugccgca-agagaagcg-gaacugc-uaug-cuguuggcu
#=GR Y SS       <<<<<<<<<-<<<<---<<<-------->>>->>>-------->->>>>>>>>>
Z               aguuuggagguccuuac-gu-cuaggu-au-aaggauua-u-uaucuucgaacu
#=GR Z SS       <<<<<<<<<<<<<<----<<-------->>-->>>-------->>>>>>>>>>>
#=GC SS_cons    <<<<<<<<<<<<<<...<<<........>>>.>>>........>>>>>>>>>>>
//
