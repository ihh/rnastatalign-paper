# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1)root;
#=GF ARGS       -seed 1237876693 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1237876693
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-au-ua-au-ua-cg-gc-ug-gc-au-uu-gc-L-c-u-S(au-ug-au-gu-gc-gc-cg-ua-cg-cg-L-a-u-c-c)a-c
#=GF BRANCH     Length 1.  Subst to a: g(2).  Subst to au: gc(1), gu(2).  Subst to c: a(2), u(2).  Subst to cg: au(1), gc(1), ua(1), ug(2).  Subst to g: a(1), c(2), u(2).  Subst to ga: gu(1).  Subst to gc: au(2), cg(1), gu(1).  Subst to gu: au(1), ga(1), gc(2).  Subst to u: c(5), g(1).  Subst to ua: cg(2), ug(2), uu(1).  Subst to ug: cg(1), ua(1).  (root -> node1)
#=GF NODE       S-au-ua-au-ua-gu-gc-ua-au-gc-ua-au-L-u-g-S(gc-cg-cg-gc-cg-gc-cg-cg-ua-ua-L-u-u-a-g)u-c
#=GF BRANCH     Length 1.  Subst to a: g(1), u(2).  Subst to ac: au(1).  Subst to au: gc(1), ua(2).  Subst to c: a(1), u(1).  Subst to cg: au(1), gu(1), ua(2), ug(1).  Subst to g: a(1).  Subst to gc: ac(1), au(1).  Subst to gu: gc(1).  Subst to u: a(1), c(1), g(1).  Subst to ua: au(1), cg(1), ug(1).  Subst to ug: cg(1), ua(1).  (node1 -> X)
#=GF LEAF       S-au-au-gc-gc-gu-cg-cg-ua-gc-cg-ua-L-a-u-S(gc-cg-cg-gc-cg-au-cg-cg-ua-ua-L-u-u-g-c)u-c
#=GF BRANCH     Length 1.  Loop delete: u(1).  Stem delete: gc(1).  Subst to a: c(2), g(2), u(1).  Subst to au: cg(1), gc(1), gu(1), ua(1).  Subst to c: a(1).  Subst to cg: au(1), gc(1), ua(2).  Subst to g: a(1), u(2).  Subst to gc: au(3), ua(1).  Subst to u: a(2).  Subst to ua: au(1), cg(2), ug(1).  Subst to ug: ua(1).  (node1 -> Y)
#=GF LEAF       S-ua-ua-gc-ua-cg-cg-ua-gc-au-ua-gc-L-D-g-S(gc-cg-au-gc-au-D-cg-cg-gc-cg-L-g-g-a-a)u-u
#=GF BRANCH     Length 1.  Loop insert: g(2).  Stem insert: gc(1).  Subst to a: u(1).  Subst to au: cg(1), gc(1), gu(2), ua(1).  Subst to c: u(1).  Subst to cg: au(1), gc(1), ua(4), ug(3).  Subst to g: u(1).  Subst to gc: au(3), gu(2).  Subst to gu: au(2), gc(2).  Subst to u: c(2).  Subst to ua: au(1), cg(2), ug(2), uu(1).  Subst to ug: au(1), cg(1), ua(1).  (root -> Z)
#=GF LEAF       S-cg-cg-cg-ua-cg-gc-cg-cg-gc-au-gu-L-c-u-S(gc-cg-au-gc-gc-gc-cg-cg-ua-cg-ua-L-a-g-g-c-c-a)a-u
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 10 11
#=GF ANCLOOPLEN 4 4
root            auaucgugaugcuauaggg-cuccau--ccggag-ccuuguaccuucgcgauau
#=GR root SS    <<<<<<<<<<<--<<<<<<-<<<<------>>>>->>>>>>-->>>>>>>>>>>
node1           auaugguaguauggccgcg-ccuuuu--agaagg-cgcggcucuacuacuauau
#=GR node1 SS   <<<<<<<<<<<--<<<<<<-<<<<------>>>>->>>>>>-->>>>>>>>>>>
X               aagggccugcuaugccgca-ccuuuu--gcaagg-ugcggcucagcagguccuu
#=GR X SS       <<<<<<<<<<<--<<<<<<-<<<<------>>>>->>>>>>-->>>>>>>>>>>
Y               uuguccugaug-ggcaga--ccgcgg--aagcgg--ucugcuucaucaggacaa
#=GR Y SS       <<<<<<<<<<<--<<<<<--<<<<------>>>>-->>>>>-->>>>>>>>>>>
Z               cccucgccgagcugcagggccucuaggccaagaggcccugcauuucggcgaggg
#=GR Z SS       <<<<<<<<<<<--<<<<<<<<<<<------>>>>>>>>>>>-->>>>>>>>>>>
#=GC SS_cons    <<<<<<<<<<<..<<<<<<<<<<<......>>>>>>>>>>>..>>>>>>>>>>>
//
