# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.9)root;
#=GF ARGS       -seed 1238389541 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238389541
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-cg-au-L-a-a-u-u-u-c-c-S(ua-cg-ua-gu-gc-cg-gc-gc-ua-gc-L-a-a-S(L-g-a-u-g)g)u
#=GF BRANCH     Length 1.  Subst to a: g(2).  Subst to au: gc(1), gu(1).  Subst to c: g(2), u(3).  Subst to cg: gc(1), ua(3).  Subst to g: a(2), u(1).  Subst to gc: gu(1).  Subst to gg: gu(1).  Subst to gu: au(2), cg(1), gc(1).  Subst to u: a(2), c(3).  Subst to ua: cg(3), gu(1), ug(1).  Subst to ug: cg(1), ua(1).  (root -> node1)
#=GF NODE       S-ua-au-L-u-g-u-u-u-u-c-S(ua-cg-ua-ua-gc-gu-gg-cg-ug-gc-L-a-c-S(L-g-a-c-u)a)c
#=GF BRANCH     Length 1.  Subst to a: c(1), g(1), u(3).  Subst to au: gc(1), gu(1), ua(2).  Subst to c: u(3).  Subst to cg: gc(1), ua(3).  Subst to g: a(2), c(1).  Subst to gc: au(2), gg(1), gu(1).  Subst to gu: gc(1).  Subst to u: a(1), c(1).  Subst to ua: au(1), cg(2).  (node1 -> X)
#=GF LEAF       S-gc-ua-L-c-a-c-c-a-a-u-S(au-cg-ua-cg-gc-gc-cg-cg-ug-au-L-a-a-S(L-g-g-c-u)g)g
#=GF BRANCH     Length 1.  Loop insert: S(1), a(1).  Subst to a: c(1), g(2), u(3).  Subst to au: gc(1), gu(1).  Subst to c: a(1), g(1), u(2).  Subst to ca: cg(1).  Subst to cg: ca(1), ug(1).  Subst to g: a(1), c(2), u(5).  Subst to gc: cg(1), gu(3), ua(3).  Subst to gu: gc(2), gg(1).  Subst to u: a(2), c(2), g(2).  Subst to ua: gc(1), ug(2).  Subst to ug: cg(1), ua(1).  (node1 -> Y)
#=GF LEAF       S-cg-au-L-u-g-a-a-g-g-c-S(ua-gc-gc-gc-gc-gc-au-ua-ua-au-L-a-g-S(L-a-u-g-c-a)a-g)c
#=GF BRANCH     Length 1.9.  Loop insert: S(1), a(1), u(1).  Subst to a: c(1), g(3), u(2).  Subst to au: gc(3).  Subst to c: g(1), u(6).  Subst to cg: ua(2).  Subst to g: a(3), c(1), u(5).  Subst to gc: au(2), gg(1), gu(2).  Subst to gg: cg(1).  Subst to gu: gc(1), ua(1).  Subst to u: a(4), c(4), g(5).  Subst to ua: cg(2).  Subst to ug: gc(1).  (root -> Z)
#=GF LEAF       S-ua-au-L-u-a-a-a-c-c-u-u-u-S(gc-cg-gu-ug-gc-cg-gc-gc-ua-au-L-g-u-S(L-g-g-I-g-c)I-g)a-a
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 0 10 2
#=GF ANCLOOPLEN 4 3 8
root            caaau-uucc-ucuggcggugaaga-ug-gcaccgcuaga-uug
#=GR root SS    <<---------<<<<<<<<<<--------->>>>>>>>>>-->>
node1           uaugu-uuuc-ucuugggcugacga-cu-acgggucaaga-cua
#=GR node1 SS   <<---------<<<<<<<<<<--------->>>>>>>>>>-->>
X               gucac-caau-acucggccuaaagg-cu-gugggccgagu-gac
#=GR X SS       <<---------<<<<<<<<<<--------->>>>>>>>>>-->>
Y               cauga-aggc-ugggggauuaagaugcaaguaauccccca-cug
#=GR Y SS       <<---------<<<<<<<<<<--------->>>>>>>>>>-->>
Z               uauaaaccuuugcgugcgguagugg-gc-guaccgcgugcaaua
#=GR Z SS       <<---------<<<<<<<<<<--------->>>>>>>>>>-->>
#=GC SS_cons    <<.........<<<<<<<<<<.........>>>>>>>>>>..>>
//
