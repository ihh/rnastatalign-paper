# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.9)root;
#=GF ARGS       -seed 1238411516 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238411516
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-cg-ua-L-a-u-S(au-cg-cg-ua-L-c-g-c-u-u-a-a-u-g)c-a-g
#=GF BRANCH     Length 1.  Loop delete: a(1).  Subst to a: c(1), u(4).  Subst to aa: au(1).  Subst to au: gc(1).  Subst to g: a(4), u(1).  Subst to gc: cg(1), gu(1), uc(1).  Subst to gu: aa(1).  Subst to u: a(1), c(2), g(2).  Subst to uc: uu(1).  Subst to uu: ua(1).  (root -> node1)
#=GF NODE       S-au-gc-ua-L-g-a-S(gc-cg-cg-gc-L-D-g-u-a-u-g-g-a-g)u-u-g
#=GF BRANCH     Length 1.  Subst to a: g(2), u(1).  Subst to au: gc(1).  Subst to c: a(1), g(2), u(4).  Subst to g: u(1).  Subst to gc: au(1), gu(1), ua(1).  Subst to gu: gc(2).  Subst to u: a(2), c(2), g(1).  Subst to ua: cg(2).  (node1 -> X)
#=GF LEAF       S-au-gu-ua-L-u-a-S(gc-ua-gc-gc-L-D-u-a-a-c-c-c-g-u)c-c-g
#=GF BRANCH     Length 1.  Loop delete: a(1).  Subst to a: u(1).  Subst to au: ua(1).  Subst to c: g(2), u(2).  Subst to g: a(1), u(1).  Subst to gc: gu(1).  Subst to gu: au(1).  Subst to u: c(2), g(1).  Subst to ua: cg(1).  (node1 -> Y)
#=GF LEAF       S-gc-gc-ua-L-g-D-S(gc-cg-au-gc-L-D-g-u-g-u-c-u-a-g)c-a-g
#=GF BRANCH     Length 1.9.  Loop delete: u(1).  Loop insert: g(1).  Stem insert: ua(1).  Subst to a: c(1), g(3), u(4).  Subst to au: ua(1).  Subst to c: a(1), u(2).  Subst to cg: gc(1), ua(1), ug(1).  Subst to g: a(3), u(2).  Subst to gc: au(1), cg(3), gu(1).  Subst to gu: gc(1).  Subst to u: a(1), c(5), g(3).  Subst to ua: cg(2), gc(1).  Subst to ug: ua(1).  (root -> Z)
#=GF LEAF       S-gc-cg-ua-au-L-a-u-S(gc-ua-gc-au-L-u-u-g-a-g-a-a-a-D-a)u-a-a
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 4 3
#=GF ANCLOOPLEN 9 5
root            gcu-auaccucg-cuuaaugaggucag-agc
#=GR root SS    <<<---<<<<---------->>>>---->>>
node1           agu-gagccg-g-uauggagcggcuug-acu
#=GR node1 SS   <<<---<<<<---------->>>>---->>>
X               agu-uagugg-u-aacccguccacccg-auu
#=GR X SS       <<<---<<<<---------->>>>---->>>
Y               ggu-g-gcag-g-ugucuagcugccag-acc
#=GR Y SS       <<<---<<<<---------->>>>---->>>
Z               gcuaaugugauugagaaa-aucacuaauagc
#=GR Z SS       <<<<--<<<<---------->>>>--->>>>
#=GC SS_cons    <<<<..<<<<..........>>>>...>>>>
//
