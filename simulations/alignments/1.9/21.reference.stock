# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.9)root;
#=GF ARGS       -seed 1238382536 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238382536
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-au-cg-ug-ua-au-ua-cg-gc-ua-au-cg-gc-cg-ua-L-a-c-u-u-a-u-g-S-cg-cg-gu-L-u-u-a-g-c
#=GF BRANCH     Length 1.  Stem insert: ua(1).  Subst to a: g(1).  Subst to au: cg(1), gc(1), gu(1).  Subst to c: g(1), u(2).  Subst to cg: ua(2), ug(1).  Subst to g: u(2).  Subst to gc: au(1).  Subst to gu: gc(1).  Subst to u: a(1), c(2).  Subst to ua: cg(1), ug(3), uu(1).  Subst to ug: au(1), cg(3), ua(2).  Subst to uu: gu(1).  (root -> node1)
#=GF NODE       S-au-au-cg-cg-ua-au-ua-cg-gc-ua-cg-au-cg-gc-ua-ug-L-a-u-g-u-u-g-c-S-ug-ug-ua-L-u-c-a-a-c
#=GF BRANCH     Length 1.  Loop delete: a(1).  Stem delete: gc(1).  Stem insert: au(1).  Subst to a: g(1), u(2).  Subst to au: cg(1), gc(1).  Subst to c: u(1).  Subst to ca: ua(1).  Subst to cg: au(1), ca(1), gc(1), ua(1), ug(3).  Subst to g: a(1), c(1), u(1).  Subst to gc: au(1), cg(1).  Subst to gu: cg(1).  Subst to u: c(2), g(1).  Subst to ua: cg(1), ug(2).  Subst to ug: cg(2).  (node1 -> X)
#=GF LEAF       S-au-gc-ua-au-ua-au-cg-cg-cg-ua-ua-cg-cg-D-au-gu-cg-L-a-u-u-g-a-a-g-S-cg-ua-ua-L-g-c-a-D-u
#=GF BRANCH     Length 1.  Subst to a: c(2), g(1).  Subst to aa: au(1).  Subst to ag: aa(1).  Subst to au: gc(2).  Subst to c: g(1), u(2).  Subst to cg: ua(2), ug(2).  Subst to g: a(2).  Subst to gc: au(1), cg(1), ua(2).  Subst to gu: au(1).  Subst to u: c(1), g(1).  Subst to ua: au(2), cg(1), ug(2).  Subst to ug: cg(1), ua(2).  (node1 -> Y)
#=GF LEAF       S-ua-ua-cg-cg-gc-gc-cg-gu-gc-ua-ug-ag-ua-au-cg-I-ug-L-c-c-u-u-u-a-c-S-cg-cg-gc-L-a-a-g-a-u
#=GF BRANCH     Length 1.9.  Loop insert: u(1).  Stem insert: ua(1).  Subst to a: g(2), u(4).  Subst to ac: au(1).  Subst to au: cg(1), gc(2), gu(3), ua(2), ug(1).  Subst to c: g(3), u(6).  Subst to cg: gc(1), ua(8), ug(1).  Subst to g: a(4), c(2), u(2).  Subst to gc: ac(1), cg(3), ua(1).  Subst to gu: au(2), cg(1), gc(2).  Subst to u: a(2), c(8), g(2).  Subst to ua: au(2), cg(4), gc(1), gu(2), ug(1).  Subst to ug: au(1), cg(1).  (root -> Z)
#=GF LEAF       S-gu-au-au-cg-ua-au-ua-au-gc-cg-I-cg-au-au-cg-cg-I-cg-L-c-a-u-u-a-a-g-g-S-au-gc-ua-L-u-u-g-u-u
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 3 15
#=GF ANCLOOPLEN 5 7
root            gacuuaucgu-ac-gc-uacuu-augccguuagcugga-gc-gu-acgauagguc
#=GR root SS    <<<<<<<<<<-<<-<<-<--------<<<----->>>>->>->>->>>>>>>>>>
node1           aaccuaucgucac-gu-uaugu-ugcuuuucaacaggg-ac-gugacgauagguu
#=GR node1 SS   <<<<<<<<<<<<<-<<-<--------<<<----->>>>->>->>>>>>>>>>>>>
X               aguauacccuucc--agcauug-aagcuugca-uaagguu--ggaaggguauacu
#=GR X SS       <<<<<<<<<<<<<--<<<--------<<<----->>>>>>-->>>>>>>>>>>>>
Y               uuccggcgguuau-ac-uccuu-uacccgaagaucggg-gu-aggacugccggaa
#=GR Y SS       <<<<<<<<<<<<<-<<-<--------<<<----->>>>->>->>>>>>>>>>>>>
Z               gaacuauagc-caacc-ccauuaaggaguuuguuacug-gguug-gcuauaguuu
#=GR Z SS       <<<<<<<<<<-<<<<<-<--------<<<----->>>>->>>>>->>>>>>>>>>
#=GC SS_cons    <<<<<<<<<<<<<<<<<<........<<<.....>>>>>>>>>>>>>>>>>>>>>
//
