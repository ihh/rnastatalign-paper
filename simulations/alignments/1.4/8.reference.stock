# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:1.4)root;
#=GF ARGS       -seed 1240086587 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240086587
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-gc-cg-ua-gu-L-c-S(L-a-a-a-a)a-S(au-gc-au-L-a-a-a)u
#=GF BRANCH     Length 1.  Subst to au: gc(3).  Subst to c: g(1).  Subst to g: a(2), u(2).  Subst to gc: au(2), ug(1).  Subst to gu: au(1).  Subst to u: a(2), c(1), g(1).  Subst to ua: au(1).  Subst to ug: cg(1).  (root -> X)
#=GF LEAF       S-gc-au-gu-ua-gu-L-c-S(L-a-g-a-u)a-S(gc-gc-ua-L-g-a-u)u
#=GF BRANCH     Length 1.  Loop insert: a(1).  Stem delete: gc(1).  Subst to a: g(1), u(2).  Subst to c: g(1), u(1).  Subst to cg: gc(1).  Subst to g: a(3), c(1), u(1).  Subst to gc: au(2), cg(1), gu(2), ua(1).  Subst to gu: gc(1).  Subst to u: a(2), c(1).  (root -> Y)
#=GF LEAF       S-gc-gc-gc-gc-cg-L-c-S(L-a-a-g-a)a-S(cg-gc-ua-L-u-g)S(D-gc-au-L-a-a-c)g
#=GF BRANCH     Length 1.4.  Stem delete: cg(1).  Subst to a: g(1), u(1).  Subst to au: gc(1), gu(2).  Subst to c: u(1).  Subst to cg: au(1), ua(1).  Subst to g: a(2).  Subst to gc: au(1), gu(1).  Subst to gu: au(1), gc(1).  Subst to u: a(2), c(1).  Subst to ua: cg(1).  (root -> Z)
#=GF LEAF       S-gc-gc-D-ua-gc-L-g-S(L-a-a-a-a)a-I(I-I-I-I-I-I)S(cg-au-au-L-u-u-a)c
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 3 0 5
#=GF ANCLOOPLEN 4 3 3
root            ggcugcaaaaa-----agaaaaucuu---uagcc
#=GR root SS    <<<<<......-----<<<...>>>.--->>>>>
X               gagugcagaua-----ggugauaccu---uauuc
#=GR X SS       <<<<<......-----<<<...>>>.--->>>>>
Y               ggggccaagaacguug-gaaacuc-gacggcccc
#=GR Y SS       <<<<<......<<<..-<<...>>-.>>>>>>>>
Z               gg-uggaaaaa-----caauuauugc---ca-cc
#=GR Z SS       <<-<<......-----<<<...>>>.--->>->>
#=GC SS_cons    <<<<<......<<<..<<<...>>>.>>>>>>>>
//
