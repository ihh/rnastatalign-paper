# STOCKHOLM 1.0
#=GF         NH (X:1,Y:1,Z:2.2)root;
#=GF       ARGS -seed 1240106654 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF       SEED 1240106654
#=GF      PARAM stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF      PARAM lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF       ROOT S-gc-L-a-c-g-a-g-a-a-c-S-gu-gc-au-au-cg-cg-ug-gu-L-a-c-g-c
#=GF     BRANCH Length 1.  Stem delete: au(1).  Subst to a: g(2), u(1).  Subst to au: gc(1), gu(2).  Subst to cg: ua(1), ug(2).  Subst to g: a(2), c(2).  Subst to gc: au(2), gu(1), ua(1).  Subst to gu: gc(2).  Subst to u: c(2), g(1).  Subst to ua: au(1), cg(2).  Subst to ug: cg(1).  (root -> X)
#=GF       LEAF S-gc-L-a-g-a-a-u-a-a-u-S-gu-au-D-cg-gc-ua-cg-gc-L-g-g-a-g
#=GF     BRANCH Length 1.  Loop insert: S(1).  Subst to a: c(1), g(3).  Subst to ac: gu(1).  Subst to au: gu(1).  Subst to c: a(1), g(1), u(2).  Subst to cg: ug(1).  Subst to g: a(1), c(1).  Subst to gc: ac(1), au(2), gu(1), ug(1).  Subst to gu: gc(1), ua(1).  Subst to u: a(1), c(4), g(1).  Subst to ua: au(1).  Subst to ug: cg(1).  (root -> Y)
#=GF       LEAF S-gu-L-a-a-c-a-a-u-u-u-S-a-gc-gc-gc-gc-cg-gc-cg-gc-L-a-c-a-u
#=GF     BRANCH Length 2.2.  Subst to a: g(2), u(1).  Subst to au: cg(1), gc(1), gu(2).  Subst to c: g(3), u(2).  Subst to cg: au(1), ua(2), ug(2).  Subst to g: a(2), c(2), u(4).  Subst to gc: au(3), cg(1), gu(1), ug(1).  Subst to gu: gc(1), ua(1).  Subst to u: a(4), c(3), g(5).  Subst to ua: au(1), cg(3), ug(2).  Subst to ug: gc(1), gu(1), ua(2).  (root -> Z)
#=GF       LEAF S-gc-L-a-u-c-c-u-a-u-g-S-I-gc-gc-gc-cg-cg-au-gc-ua-L-u-c-c-u
#=GF   ANCSTEMS 2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 8 1
#=GF ANCLOOPLEN 4 8
      X         gagaauaaugacgucgggagcgacguuc
#=GR X       SS <........<<<<<<<....>>>>>>>>
      Y         gaacaauuuaggggcgcgacaucgcgccccu
#=GR Y       SS <.........<<<<<<<<....>>>>>>>>>
      Z         gauccuauggggccaguuccuacuggcccc
#=GR Z       SS <........<<<<<<<<....>>>>>>>>>

//
