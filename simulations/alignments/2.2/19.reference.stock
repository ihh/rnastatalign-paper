# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:2.2)root;
#=GF ARGS       -seed 1238423538 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238423538
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-cg-gc-cg-ua-au-cg-au-gc-gc-L-a-a-S(cg-gc-L-g-c-a-g-u-u-S(cg-au-L-a-a-g-c-a-c)a)a
#=GF BRANCH     Length 1.  Loop insert: a(1).  Subst to a: g(3).  Subst to ac: gu(1).  Subst to au: gc(2).  Subst to c: g(1), u(2).  Subst to g: a(3), c(2), u(1).  Subst to gc: ac(1), au(1), cg(1).  Subst to gu: au(1).  Subst to u: a(2), c(3).  Subst to ua: au(1).  Subst to ug: cg(1).  (root -> node1)
#=GF NODE       S-cg-gc-cg-ua-gc-ug-gc-au-gc-L-a-g-S(cg-ua-L-a-g-u-g-u-c-S(gc-au-L-a-a-g-u-u-g-a)a)a
#=GF BRANCH     Length 1.  Loop delete: g(1).  Subst to a: g(2), u(3).  Subst to ac: au(2).  Subst to au: ac(1), cg(1), gc(3).  Subst to c: u(3).  Subst to cg: gc(1), ua(2).  Subst to g: a(3).  Subst to ga: gc(1).  Subst to gc: ac(1), au(1), cg(1), ga(1).  Subst to u: a(2), g(3).  Subst to ua: cg(1), ug(1).  (node1 -> X)
#=GF LEAF       S-cg-au-gc-cg-gc-ua-gc-au-au-L-a-c-S(cg-ua-L-a-a-u-g-u-c-S(au-gc-L-a-D-c-g-c-a-a)u)a
#=GF BRANCH     Length 1.  Loop insert: u(1).  Subst to a: g(2), u(2).  Subst to aa: ua(1).  Subst to au: gc(1).  Subst to c: g(1), u(4).  Subst to cg: gc(1), ua(2), ug(2).  Subst to g: a(4), u(1).  Subst to gc: cg(3), gu(1), ua(1).  Subst to gu: au(1), gc(2).  Subst to u: a(1), c(5), g(3).  Subst to ua: au(1), cg(1), gc(1), ug(1).  Subst to ug: cg(1), gc(1), ua(1).  Subst to uu: ug(1).  (node1 -> Y)
#=GF LEAF       S-gu-cg-au-gc-gc-aa-gc-gu-cg-L-u-a-S(cg-uu-L-g-u-u-c-g-u-c-S(ua-gc-L-a-a-u-g-u-g-a)a)a
#=GF BRANCH     Length 2.2.  Loop delete: a(2), g(1).  Stem insert: cg(1).  Subst to a: c(3), g(3), u(4).  Subst to au: gc(1), gu(1).  Subst to c: a(4), u(3).  Subst to cg: gc(1), ua(4), ug(3).  Subst to g: a(1), c(2), u(4).  Subst to gc: au(2), gu(2), ug(1).  Subst to gu: au(1), gc(2).  Subst to u: a(3), c(3), g(5).  Subst to ua: au(1), cg(5).  Subst to ug: au(1), cg(1), ua(2).  (root -> Z)
#=GF LEAF       S-cg-gc-cg-cg-au-gc-cg-cg-gc-gc-L-a-c-S(ua-gc-L-D-c-a-I-a-D-g-S(cg-cg-L-u-I-a-a-a-u-D)a)a
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 2 2 9
#=GF ANCLOOPLEN 6 7 3
root            cgcu-acaggaacggca-guucaa-agcacugacgaccugu-agcg
#=GR root SS    <<<<-<<<<<--<<-------<<------->>->>->>>>>->>>>
node1           cgcu-gugagagcuagu-gucgaaaguugaucaagacucgc-agcg
#=GR node1 SS   <<<<-<<<<<--<<-------<<------->>->>->>>>>->>>>
X               cagc-gugaaaccuaau-gucaga-cgcaacuuagauucac-gcug
#=GR X SS       <<<<-<<<<<--<<-------<<------->>->>->>>>>->>>>
Y               gcag-gaggcuacuguucgucugaaugugacaaugagucac-cugu
#=GR Y SS       <<<<-<<<<<--<<-------<<------->>->>->>>>>->>>>
Z               cgccagccggacug-ca-a-gccu-aaau-ggacaaccggcuggcg
#=GR Z SS       <<<<<<<<<<--<<-------<<------->>->>->>>>>>>>>>
#=GC SS_cons    <<<<<<<<<<..<<.......<<.......>>.>>.>>>>>>>>>>
//
