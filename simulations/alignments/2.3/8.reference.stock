# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:2.3)root;
#=GF ARGS       -seed 1238423464 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238423464
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-L-a-g-g-u-S(gc-cg-L-c-u-S(cg-ua-cg-au-ua-gc-gc-gc-gc-ua-cg-cg-cg-gc-au-L-u-a-a-a-c)u)a-u
#=GF BRANCH     Length 1.  Loop delete: a(1).  Subst to a: c(1), g(1), u(2).  Subst to au: gc(1).  Subst to c: g(2), u(2).  Subst to cg: gc(1), ua(5), ug(2).  Subst to g: a(1).  Subst to gc: au(1), cg(2), gu(3).  Subst to gu: au(1), cg(1), gc(3).  Subst to u: a(1).  Subst to ua: cg(3), gc(1), gu(1), ug(2).  Subst to ug: cg(4), ua(1).  (root -> node1)
#=GF NODE       S-L-a-c-a-u-S(gu-cg-L-c-u-S(gc-cg-ua-gc-ua-gc-gc-ua-au-ug-cg-cg-gc-ua-gc-L-c-D-a-a-c)a)a-c
#=GF BRANCH     Length 1.  Subst to a: c(2), g(1), u(2).  Subst to au: gc(2), gu(1), ua(1).  Subst to c: a(1), u(2).  Subst to ca: cg(1).  Subst to cg: au(2), ua(3).  Subst to g: a(3), c(1).  Subst to gc: cg(1).  Subst to gu: gc(1).  Subst to u: a(3), c(2), g(1).  Subst to ua: ca(1), cg(1), ug(1).  Subst to ug: ua(1).  (node1 -> X)
#=GF LEAF       S-L-a-c-a-a-S(gu-cg-L-u-a-S(cg-cg-au-au-gc-gc-cg-ua-au-ua-ug-cg-gc-cg-gc-L-g-D-c-u-c)u)u-g
#=GF BRANCH     Length 1.  Loop delete: a(1), c(1).  Subst to a: c(1), u(1).  Subst to ac: gc(1).  Subst to au: gc(2), gu(1), ua(1).  Subst to c: u(1).  Subst to cg: gc(2), ua(2), ug(2).  Subst to g: a(2).  Subst to gc: au(2), gu(2).  Subst to gu: gc(2).  Subst to u: c(2).  Subst to ua: ac(1), cg(1).  Subst to ug: ua(1).  (node1 -> Y)
#=GF LEAF       S-L-a-a-a-u-S(cg-cg-L-a-u-S(gc-cg-cg-au-ua-gc-au-ua-au-cg-cg-cg-cg-cg-gc-L-c-D-g-g-c)D)a-D
#=GF BRANCH     Length 2.3.  Loop delete: a(1).  Loop insert: S(1).  Subst to a: c(2), g(3), u(6).  Subst to au: cg(1), gc(6), gu(1), ua(2).  Subst to c: g(2), u(3).  Subst to cg: gc(1), gu(1), ua(4), ug(4).  Subst to g: a(7), u(1).  Subst to gc: au(4), cg(1), gu(1).  Subst to gu: au(2), cg(1), gc(1).  Subst to u: a(3), c(4).  Subst to ua: au(3), cg(5), gc(1), ug(3).  Subst to ug: au(1), cg(2), ua(5).  (root -> Z)
#=GF LEAF       S-L-D-g-g-a-S(cg-ua-L-u-a-S(cg-cg-gu-cg-cg-gc-gc-au-au-ua-gc-ua-cg-ug-ua-L-g-a-g-a-g)c)c-a-u
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 15 2 0
#=GF ANCLOOPLEN 5 3 6
root            aggugccucucauggggucccgauaaacucgggaccccaugagugc-au
#=GR root SS    ----<<--<<<<<<<<<<<<<<<----->>>>>>>>>>>>>>>->>---
node1           acaugccugcugugguauccgugc-aaccacggguaccacagcagu-ac
#=GR node1 SS   ----<<--<<<<<<<<<<<<<<<----->>>>>>>>>>>>>>>->>---
X               acaagcuaccaaggcuauucgcgg-cuccgcggauagccuuggugu-ug
#=GR X SS       ----<<--<<<<<<<<<<<<<<<----->>>>>>>>>>>>>>>->>---
Y               aaauccaugccaugauacccccgc-ggccggggguaucauggc-gg-a-
#=GR Y SS       ----<<--<<<<<<<<<<<<<<<----->>>>>>>>>>>>>>>->>---
Z               -ggacuuaccgccggaaugucuugagagaggacauuccgguggcagcau
#=GR Z SS       ----<<--<<<<<<<<<<<<<<<----->>>>>>>>>>>>>>>->>---
#=GC SS_cons    ....<<..<<<<<<<<<<<<<<<.....>>>>>>>>>>>>>>>.>>...
//
