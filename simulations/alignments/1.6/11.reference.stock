# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.6)root;
#=GF ARGS       -seed 1239610075 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1239610075
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gu-au-ua-gu-gc-gc-cg-ug-gc-cg-L-u-g-a-c-a-g-S(cg-gc-gc-au-gc-ua-gc-cg-L-a-c-c-g-a)a-a-a
#=GF BRANCH     Length 1.  Loop delete: a(1), c(1), g(1).  Loop insert: g(1).  Subst to a: g(1).  Subst to ac: au(1).  Subst to ag: cg(1).  Subst to au: gc(7), ua(1).  Subst to c: g(1), u(2).  Subst to cg: gc(3), ug(1).  Subst to g: a(2), u(3).  Subst to gc: ac(1), au(3), cg(1), gu(1).  Subst to u: c(4), g(1).  Subst to ua: au(2), cg(1), ug(2).  Subst to ug: ua(2).  (root -> node1)
#=GF NODE       S-ua-ua-ua-gu-cg-au-ua-cg-gc-cg-L-g-g-D-u-a-D-S(cg-au-au-au-gc-gc-ag-cg-L-a-D-c-g-g-a)a-g-a
#=GF BRANCH     Length 1.  Loop delete: u(2).  Subst to a: g(1), u(2).  Subst to aa: ag(1).  Subst to au: aa(1), gc(2).  Subst to c: g(3), u(1).  Subst to cg: au(2), ua(2), ug(1).  Subst to g: a(1), u(1).  Subst to gc: au(1), cg(1), gg(1).  Subst to gg: cg(1).  Subst to gu: au(1).  Subst to u: a(3), c(4), g(2).  Subst to ua: au(1), cg(1), gc(1), gu(1).  Subst to ug: gu(1), ua(1).  (node1 -> X)
#=GF LEAF       S-cg-ua-ua-cg-cg-cg-ug-ua-gc-ua-L-u-a-D-u-a-D-S(gc-cg-au-cg-au-gc-ua-cg-L-g-D-D-c-a-a)D-u-u
#=GF BRANCH     Length 1.  Subst to a: g(2).  Subst to au: ag(1), cg(1), gc(2), gu(2).  Subst to c: a(1), g(1).  Subst to cg: gc(2), ua(3).  Subst to g: a(4), u(1).  Subst to gc: au(3), ua(1).  Subst to gu: au(1), gc(1).  Subst to u: c(1).  Subst to ua: au(2), cg(1), gc(1).  Subst to ug: cg(2).  (node1 -> Y)
#=GF LEAF       S-cg-ug-ua-au-gc-cg-ua-cg-au-cg-L-g-a-D-g-g-D-S(ua-ua-gu-cg-au-cg-au-ug-L-g-D-u-g-a-c)g-g-c
#=GF BRANCH     Length 1.6.  Loop delete: c(1), g(1).  Subst to a: g(2), u(1).  Subst to ac: au(1).  Subst to au: ac(1), gc(3), gu(2).  Subst to c: a(2), u(1).  Subst to cg: cu(1), gc(2), ua(2), ug(1).  Subst to cu: ua(1).  Subst to g: a(3), c(1), u(2).  Subst to gc: au(4), cg(2), gu(3).  Subst to gu: au(1), gc(3).  Subst to u: a(3), c(1), g(1).  Subst to ua: cg(1).  (root -> Z)
#=GF LEAF       S-gc-cg-cg-gc-gc-gc-cg-cg-cg-gc-L-g-D-g-c-a-c-S(cg-gc-gc-gu-gc-cg-au-au-L-u-D-u-g-I-c)g-a-g
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 8 10
#=GF ANCLOOPLEN 5 9
root            gaugggcugcugacagcggagugcaccg-agcacuccgaaagcggccuauu
#=GR root SS    <<<<<<<<<<......<<<<<<<<....-.>>>>>>>>...>>>>>>>>>>
node1           uuugcaucgcgg-ua-caaaggaca-cggaggccuuugagagcgauguaaa
#=GR node1 SS   <<<<<<<<<<..-..-<<<<<<<<.-....>>>>>>>>...>>>>>>>>>>
X               cuucccuuguua-ua-gcacagucg--caagacugugc-uuacaggggaag
#=GR X SS       <<<<<<<<<<..-..-<<<<<<<<.--...>>>>>>>>-..>>>>>>>>>>
Y               cuuagcucacga-gg-uugcacaug-ugacguguguaaggcgugagcuagg
#=GR Y SS       <<<<<<<<<<..-..-<<<<<<<<.-....>>>>>>>>...>>>>>>>>>>
Z               gccgggcccgg-gcaccggggcaau-ug-cuugcuccggagcgggcccggc
#=GR Z SS       <<<<<<<<<<.-....<<<<<<<<.-..-.>>>>>>>>...>>>>>>>>>>
#=GC SS_cons    <<<<<<<<<<......<<<<<<<<......>>>>>>>>...>>>>>>>>>>
//
