# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:0.9)root;
#=GF ARGS       -seed 1240094946 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240094946
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-ug-ua-L-u-a-S(L-a-c-g-u-c-S(au-cg-cg-au-L-g-c-u-c-g)u)u-a-g-g-u
#=GF BRANCH     Length 1.  Loop delete: c(2).  Loop insert: g(1).  Subst to a: g(2), u(2).  Subst to au: gu(1).  Subst to c: a(1), u(4).  Subst to g: c(1).  Subst to gc: gu(1), ua(1).  Subst to gu: au(1), gc(1), ug(1).  Subst to u: a(3), c(2), g(1).  Subst to ua: cg(1).  (root -> X)
#=GF LEAF       S-gu-gc-L-u-u-S(L-u-a-c-u-c-S(au-ua-cg-au-L-g-D-D-u-a-g)a)g-c-g-c-u
#=GF BRANCH     Length 1.  Subst to a: c(1), g(4), u(2).  Subst to ag: cg(1).  Subst to c: g(1), u(2).  Subst to cg: ug(1).  Subst to g: a(3), u(1).  Subst to gc: au(1).  Subst to u: a(1), c(3), g(1).  Subst to ua: ug(1).  Subst to ug: ag(1).  (root -> Y)
#=GF LEAF       S-cg-ua-L-u-a-S(L-a-u-a-u-g-S(au-ua-cg-gc-L-c-a-u-c-a-I)a)c-g-u-g-u
#=GF BRANCH     Length 0.9.  Loop delete: u(1).  Loop insert: a(1).  Subst to a: c(2), g(3), u(3).  Subst to ac: au(1).  Subst to cg: ua(2), ug(1).  Subst to g: a(1), c(2), u(1).  Subst to u: g(1).  Subst to ua: au(1), cg(2).  (root -> Z)
#=GF LEAF       S-cg-cg-L-a-a-S(L-a-u-g-a-a-g-S(ac-ua-cg-ua-L-g-a-a-u-a-I)a)D-a-g-g-u
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 4 0 2
#=GF ANCLOOPLEN 5 6 7
root            uuuaa-cgucaccagcucg-ugguuuagguag
#=GR root SS    <<...-....<<<<.....->>>>......>>
X               gguuu-acucaucag--uagugauagcgcucu
#=GR X SS       <<...-....<<<<.--...>>>>......>>
Y               cuuaa-uaugaucgcauca-cgauacguguag
#=GR Y SS       <<...-....<<<<.....->>>>......>>
Z               ccaaaugaagaucugaaua-agaca-aggugg
#=GR Z SS       <<........<<<<.....->>>>.-....>>
#=GC SS_cons    <<........<<<<......>>>>......>>
//
