# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:0.9)root;
#=GF ARGS       -seed 1240105872 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240105872
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-cg-L-g-c-g-S(cg-L-c-S(cg-cg-ua-gc-L-c-S(gu-au-gc-L-u-a-u-g-u)c-a)a-u-u-g)u-g
#=GF BRANCH     Length 1.  Loop insert: u(1).  Subst to a: g(3).  Subst to au: gu(1), ua(1).  Subst to c: u(3).  Subst to cg: gc(2).  Subst to g: a(2), u(3).  Subst to gc: au(1).  Subst to gu: gc(1).  Subst to u: a(2), c(3), g(2).  Subst to ua: cg(3).  Subst to ug: cg(1).  (root -> X)
#=GF LEAF       S-au-cg-L-a-c-u-a-S(ua-L-c-S(cg-au-ua-ug-L-c-S(gu-gc-ua-L-u-g-c-u-u)g-g)a-g-u-g)u-u
#=GF BRANCH     Length 1.  Loop delete: c(1).  Loop insert: c(1).  Subst to a: g(3), u(3).  Subst to au: cg(1), gc(2), gu(3).  Subst to c: a(1), u(2).  Subst to ca: cg(1).  Subst to cg: ca(1), gc(1).  Subst to g: a(1), u(2).  Subst to gc: au(2), gu(1).  Subst to gu: au(2), gc(1).  Subst to u: a(1), c(4).  (root -> Y)
#=GF LEAF       S-au-cg-L-a-c-g-I-S(gc-L-D-S(cg-cg-ua-cg-L-u-u-S(gc-au-au-L-u-a-c-a-g)u-a)a-u-a-g)g-g
#=GF BRANCH     Length 0.9.  Loop delete: c(1).  Loop insert: c(1).  Stem insert: au(1).  Subst to a: g(2), u(1).  Subst to au: gc(1), gu(1).  Subst to c: u(2).  Subst to g: a(3), u(2).  Subst to gc: au(2).  Subst to gu: gc(1).  Subst to u: c(3), g(5).  Subst to ua: ug(2).  Subst to ug: cg(1), gc(1), ua(1).  (root -> Z)
#=GF LEAF       S-gu-cg-L-u-u-g-I-S(cg-L-c-u-S(cg-ua-ua-gc-L-D-I-S(au-ug-cg-gc-L-u-a-a-g-u)c-u)g-u-u-u)u-a
#=GF ANCSTEMS   4 (total) 4 (nonempty)
#=GF ANCSTEMLEN 3 4 1 2
#=GF ANCLOOPLEN 5 3 5 5
root            gcgcg-cc-ccugc-ga-guauguc-uucacaggauugguggc
#=GR root SS    <<...-<.-<<<<.-<<-<.....>->>..>>>>....>..>>
X               acacuauc-cauuc-gg-uugcuua-cugggaugagugauugu
#=GR X SS       <<....<.-<<<<.-<<-<.....>->>..>>>>....>..>>
Y               acacg-g--ccucuuga-auacagu-ucuagaggauagcgggu
#=GR Y SS       <<...-<--<<<<..<<-<.....>->>..>>>>....>..>>
Z               gcuug-ccucuug--aucguaagucggucucaagguuuguagu
#=GR Z SS       <<...-<..<<<<--<<<<.....>>>>..>>>>....>..>>
#=GC SS_cons    <<....<..<<<<..<<<<.....>>>>..>>>>....>..>>
//
