# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:0.9)root;
#=GF ARGS       -seed 1240087908 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240087908
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-au-L-S(gc-cg-au-gc-cg-gc-cg-L-g-a-u-S(cg-L-u-a-a)c-u-u)a-c-g-g
#=GF BRANCH     Length 1.  Stem insert: ua(1).  Subst to a: g(1), u(2).  Subst to au: cg(1).  Subst to c: g(1), u(1).  Subst to ca: ua(1).  Subst to cg: ua(1), ug(1).  Subst to g: a(2), c(1), u(1).  Subst to gc: au(1).  Subst to u: c(1), g(2).  Subst to ua: cg(2), gc(1).  Subst to ug: ua(1).  (root -> X)
#=GF LEAF       S-au-L-S(gc-gc-au-cg-cg-cg-gc-cg-L-g-a-g-S(ca-L-a-a-g)c-u-u)a-c-a-u
#=GF BRANCH     Length 1.  Subst to a: g(2), u(2).  Subst to au: gc(2).  Subst to c: a(1).  Subst to cg: ua(1), uu(1).  Subst to g: a(1), u(2).  Subst to u: a(1), c(1), g(1).  Subst to ua: au(1), gc(1), ug(1).  Subst to ug: cg(1), ua(2).  Subst to uu: ug(1).  (root -> Y)
#=GF LEAF       S-au-L-S(cg-cg-au-au-I-cg-ug-cg-L-a-u-u-S(cg-L-a-a-u)c-g-g)a-c-a-g
#=GF BRANCH     Length 0.9.  Loop delete: u(1).  Subst to a: g(2), u(1).  Subst to cg: ug(1).  Subst to g: a(2), u(2).  Subst to u: a(2), c(1), g(2).  Subst to ua: au(1), cg(2).  Subst to ug: ua(1).  (root -> Z)
#=GF LEAF       S-au-L-S(gc-cg-ua-gc-I-cg-gc-ua-L-g-a-a-S(cg-L-u-a-g)c-u-u)u-g-D-u
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 1 7 1
#=GF ANCLOOPLEN 3 6 4
root            agcag-cgcgaucuaagcuugcg-cugcacggu
#=GR root SS    <<<<<-<<<...<...>...>>>->>>>....>
X               aggacccgcgagcaagacuugcggguccacauu
#=GR X SS       <<<<<<<<<...<...>...>>>>>>>>....>
Y               accaa-cucauucaaugcggggg-uuggacagu
#=GR Y SS       <<<<<-<<<...<...>...>>>->>>>....>
Z               agcug-cgugaacuaggcuuacg-cagcug-uu
#=GR Z SS       <<<<<-<<<...<...>...>>>->>>>..-.>
#=GC SS_cons    <<<<<<<<<...<...>...>>>>>>>>....>
//
