# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:0.9)root;
#=GF ARGS       -seed 1237907940 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1237907940
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-cg-gc-cg-cg-L-u-c-c-a-g-a-a-u-S(gc-ua-ac-ua-gu-ua-au-cg-L-a-g-c-c-c-u-c-a)u
#=GF BRANCH     Length 1.  Subst to a: g(2), u(1).  Subst to au: cg(1), gc(2), gu(2), ua(1).  Subst to c: g(1), u(1).  Subst to ca: ua(1).  Subst to cg: au(1), gg(1), ua(2), ug(1).  Subst to g: a(3), u(4).  Subst to gc: ac(1), au(2).  Subst to gg: gc(1).  Subst to gu: cg(1), gc(1).  Subst to u: a(1), c(4), g(1).  Subst to ua: au(1), ca(1), cg(1).  Subst to ug: cg(1), ua(1).  (root -> node1)
#=GF NODE       S-gc-cg-au-au-ug-L-u-c-u-g-a-a-a-u-S(cg-cg-gc-cg-gu-ua-cg-au-L-g-c-c-c-g-u-a-g)g
#=GF BRANCH     Length 1.  Start-of-stem insert: S(1).  Subst to a: g(2), u(1).  Subst to au: cg(1), gc(1), gu(2), uu(1).  Subst to c: u(3).  Subst to cg: ug(2).  Subst to g: a(1), c(1), u(4).  Subst to gc: au(1), cg(1).  Subst to gu: au(3), cg(1).  Subst to u: a(2), c(3), g(4).  Subst to ua: au(1), cg(1), ug(1).  Subst to ug: cg(1), ua(1).  Subst to uu: ua(1).  (node1 -> X)
#=GF LEAF       S-gc-gu-cg-au-au-ua-L-u-c-c-u-a-a-u-g-S(cg-ua-gc-gc-au-gu-au-gu-L-a-g-u-c-g-g-g-a)u
#=GF BRANCH     Length 1.  Loop insert: c(1).  Stem insert: gu(1).  Subst to a: g(1), u(2).  Subst to au: gc(1), gu(1).  Subst to c: a(1).  Subst to g: u(2).  Subst to gc: au(1), cg(1), gu(1), ug(1).  Subst to gu: au(1), gc(3).  Subst to u: c(3), g(1).  Subst to uu: gu(1).  (node1 -> Y)
#=GF LEAF       S-I-gu-ua-cg-au-gc-gu-L-u-c-g-g-a-a-a-a-u-S(cg-cg-gc-cg-au-ua-uu-au-L-g-c-u-u-g-a-a-g)g
#=GF BRANCH     Length 0.9.  Loop insert: L(1).  Subst to a: c(2), g(1).  Subst to ac: au(1).  Subst to au: ac(1), gu(1).  Subst to c: a(1), u(4).  Subst to cg: ug(2).  Subst to g: u(1).  Subst to gc: gu(1).  Subst to gu: au(1).  Subst to u: a(2), c(5), g(1).  Subst to ua: gc(1).  Subst to ug: cg(1), ua(2).  (root -> Z)
#=GF LEAF       S-I-gc-I-cg-gc-cg-cg-L-u-g-I-a-a-g-a-a-u-S(gc-ua-ua-ug-ac-cg-au-cg-L-u-c-u-u-u-c-c-c-a)u
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 8 5
#=GF ANCLOOPLEN 8 9
root            -g-cgccuc-cagaauguauguac-agcccucaguauacacuggcg-c-
#=GR root SS    -<-<<<<---------<<<<<<<<--------->>>>>>>>->>>>->-
node1           -g-caauuc-ugaaauccgcguca-gcccguagugaugcgggguug-c-
#=GR node1 SS   -<-<<<<---------<<<<<<<<--------->>>>>>>>->>>>->-
X               gg-caauuc-cuaaugcuggagag-agucgggauuuuccaguauug-uc
#=GR X SS       <<-<<<<---------<<<<<<<<--------->>>>>>>>->>>>->>
Y               -gucaggucggaaaauccgcauua-gcuugaaguuaugcgggucugau-
#=GR Y SS       -<<<<<<---------<<<<<<<<--------->>>>>>>>->>>>>>-
Z               -g-cgccug-aagaauguuuacacucuuucccagugcgaacuggcg-c-
#=GR Z SS       -<-<<<<---------<<<<<<<<--------->>>>>>>>->>>>->-
#=GC SS_cons    <<<<<<<.........<<<<<<<<.........>>>>>>>>.>>>>>>>
//
