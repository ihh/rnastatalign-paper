# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:2.4)root;
#=GF ARGS       -seed 1238421340 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238421340
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-au-au-gc-gc-cg-au-cg-au-cg-L-u-a-a-S(gc-gc-au-ua-cg-cg-L-a-u-a-a-a-c-a-a)u-a-g-c
#=GF BRANCH     Length 1.  Loop delete: a(1), c(1).  Subst to a: g(2).  Subst to ac: au(1).  Subst to au: ac(1), ua(1).  Subst to c: a(3), u(3).  Subst to cg: gc(3), ua(1).  Subst to g: a(3), c(1), u(1).  Subst to gc: au(1), ua(2).  Subst to gu: au(2).  Subst to u: c(2), g(1).  Subst to ua: cg(1), ug(3).  Subst to ug: cg(3), gc(1).  (root -> node1)
#=GF NODE       S-au-au-cg-cg-cg-gu-ug-gu-au-L-c-a-a-S(cg-ua-gc-gc-cg-gc-L-a-g-u-c-D-c-a-D)u-c-g-g
#=GF BRANCH     Length 1.  Subst to a: u(2).  Subst to au: gc(3), gu(2), uu(1).  Subst to c: u(2).  Subst to cg: gc(1), ua(2), ug(1).  Subst to g: a(1).  Subst to gc: au(2), cg(2), gu(1).  Subst to gu: au(1), gc(2).  Subst to u: c(2), g(3).  Subst to ua: cg(1), ug(1).  Subst to ug: cg(1).  Subst to uu: gu(1).  (node1 -> X)
#=GF LEAF       S-au-gc-au-au-cg-au-cg-gc-au-L-c-g-a-S(ua-cg-au-cg-cg-gu-L-a-a-u-u-D-c-a-D)a-c-c-u
#=GF BRANCH     Length 1.  Loop insert: a(1), c(1).  Subst to a: c(1), g(2).  Subst to au: cg(1), gu(1).  Subst to c: g(1), u(1).  Subst to cg: ua(2).  Subst to g: a(3), u(1).  Subst to gc: au(2), gu(1).  Subst to gu: au(1).  Subst to u: a(1), c(2), g(3).  Subst to ua: cg(2), ug(1).  (node1 -> Y)
#=GF LEAF       S-gc-au-cg-cg-au-gu-cg-gc-gc-L-u-a-c-a-u-S(cg-ua-gc-gc-ua-gc-L-a-g-g-c-D-c-u-D)u-c-u-u
#=GF BRANCH     Length 2.4.  Loop delete: c(1), g(1).  Loop insert: g(1).  Stem delete: cg(1).  Subst to a: c(2), g(7), u(2).  Subst to ac: au(3).  Subst to au: ac(2), gc(6), gu(3).  Subst to c: a(5), g(1), u(8).  Subst to ca: cg(1).  Subst to cg: ca(1), gc(2), gu(1), ua(6), ug(3).  Subst to g: a(5), c(2), u(5).  Subst to gc: ac(1), au(5), cg(4).  Subst to gu: au(2), cg(1), gc(1).  Subst to u: a(1), c(7), g(4).  Subst to ua: au(2), cg(5), ug(2).  Subst to ug: cg(4), ua(1).  (root -> Z)
#=GF LEAF       S-gc-gc-cg-ua-D-au-ua-gc-gc-L-D-I-a-I-a-S(au-gc-gc-cg-cg-ua-L-c-c-a-a-a-c-c-c)D-S(au-au-cg-gc-L-a-a-a-a)a-a-g
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 6 9
#=GF ANCLOOPLEN 8 7
root            aaggcacacu-a-aggauccauaaacaaggauccu------------agcgugugccuu
#=GR root SS    <<<<<<<<<-----<<<<<<-------->>>>>>---------------->>>>>>>>>
node1           aacccgugac-a-acuggcgaguc-ca-cgccagu------------cgguuguggguu
#=GR node1 SS   <<<<<<<<<-----<<<<<<-------->>>>>>---------------->>>>>>>>>
X               agaacacgac-g-aucaccgaauu-ca-uggugaa------------ccuucguguucu
#=GR X SS       <<<<<<<<<-----<<<<<<-------->>>>>>---------------->>>>>>>>>
Y               gaccagcgguacaucuggugaggc-cu-caccagu------------cuuccguugguc
#=GR Y SS       <<<<<<<<<-----<<<<<<-------->>>>>>---------------->>>>>>>>>
Z               ggcu-augg--a-aaggccuccaaacccaggccu-aacgaaaacguuaagccau-agcc
#=GR Z SS       <<<<-<<<<-----<<<<<<-------->>>>>>-<<<<---->>>>--->>>>->>>>
#=GC SS_cons    <<<<<<<<<.....<<<<<<........>>>>>>.<<<<....>>>>...>>>>>>>>>
//
