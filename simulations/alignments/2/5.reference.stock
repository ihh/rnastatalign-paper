# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:2)root;
#=GF ARGS       -seed 1240081165 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240081165
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-au-gc-cg-ug-gc-cg-au-ua-ua-L-g-a-g-S(L-g-a-a-c)S(au-L-c-u-a-a-a)u-u-a
#=GF BRANCH     Length 1.  Loop insert: u(1).  Stem insert: ug(1).  Subst to a: c(1), u(2).  Subst to c: a(1), g(1), u(3).  Subst to cg: au(1), ua(1), ug(1).  Subst to g: c(1).  Subst to gc: au(1), gu(2), ua(1).  Subst to gg: cg(1).  Subst to gu: gc(1), gg(1).  Subst to u: a(1), c(2), g(1).  Subst to ua: au(1), cg(1).  Subst to ug: ua(1).  (root -> X)
#=GF LEAF       S-gc-gc-cg-cg-cg-gc-ua-gc-gc-ua-L-g-c-g-S(L-u-u-u-a-a)S(ug-L-c-a-a-a-a)a-c-a
#=GF BRANCH     Length 1.  Stem insert: au(1).  Subst to a: c(1), g(2).  Subst to au: gc(1).  Subst to c: u(2).  Subst to cg: gu(1), ua(1), ug(1).  Subst to g: a(2), u(1).  Subst to gc: cg(2).  Subst to gu: au(2), gc(1), ua(1).  Subst to u: a(4), c(2).  Subst to ua: au(1), gc(1), ug(1).  Subst to ug: gu(1).  (root -> Y)
#=GF LEAF       S-cg-cg-gc-ua-I-ua-gu-au-gu-ua-cg-L-g-u-g-S(L-g-I-a-a-a)S(au-L-g-u-u-u-u)c-u-a
#=GF BRANCH     Length 2.  Loop delete: c(1), u(1).  Loop insert: L(1).  Stem insert: gu(1).  Subst to a: c(4), g(3).  Subst to au: gc(3), gu(3), ug(1).  Subst to c: a(1), g(3), u(11).  Subst to cg: au(1), gc(1), ua(1), ug(4).  Subst to g: a(7), c(3), u(4).  Subst to gc: au(1), gu(4).  Subst to gu: au(6), cg(1), gc(1).  Subst to u: a(3), c(5), g(6).  Subst to ua: au(1), cg(1), gu(1), ug(2).  Subst to ug: au(1), cg(3), ua(2).  (root -> Z)
#=GF LEAF       S-cg-gc-ua-cg-I-gc-ua-cg-gc-I-cg-ua-L-c-g-a-S(L-g-I-u-D-c)S(ua-L-g-c-g-c-a-a)a-D-g
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 1 0 9
#=GF ANCLOOPLEN 4 5 6
root            agcu-gca--uugagg-aaca-cuaaauuuaaa--ugc-ggcu
#=GR root SS    <<<<-<<<--<<....-...<-.....>...>>-->>>->>>>
X               ggcccgug--gugcguuuaau-caaaagacaac--cacgggcc
#=GR X SS       <<<<<<<<--<<........<-.....>...>>-->>>>>>>>
Y               ccgu-uga-gucgugg-aaaa-guuuuucuagau-uua-acgg
#=GR Y SS       <<<<-<<<-<<<....-...<-.....>...>>>->>>->>>>
Z               cguc-gucg-cucgag-u-cugcgcaaaa-gag-cgac-gacg
#=GR Z SS       <<<<-<<<<-<<....-.-.<......>.-.>>->>>>->>>>
#=GC SS_cons    <<<<<<<<<<<<........<......>...>>>>>>>>>>>>
//
