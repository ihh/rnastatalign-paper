# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:2)root;
#=GF ARGS       -seed 1240103467 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240103467
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-cg-gc-gc-gc-ug-L-S(gc-L-u-g-a-S(cg-ua-gu-ua-L-g-c-a-g-u)a)u-c-g-u-a-u-g
#=GF BRANCH     Length 1.  Loop insert: u(1).  Subst to a: c(1), g(3), u(1).  Subst to au: gu(1).  Subst to c: g(2), u(3).  Subst to cg: gc(1), ug(2).  Subst to g: a(2), c(1).  Subst to gc: cg(1).  Subst to gu: gc(1).  Subst to u: a(1), c(2), g(1).  Subst to ua: cg(1).  Subst to ug: cg(1).  (root -> X)
#=GF LEAF       S-gc-cg-gu-gc-cg-L-S(gc-L-u-a-a-S(ua-ua-au-ua-L-u-c-a-g-c)a)u-c-u-u-g-a-g-a
#=GF BRANCH     Length 1.  Subst to a: c(1), g(3), u(1).  Subst to aa: au(1).  Subst to au: cg(1), gc(1), gu(1), ua(1).  Subst to c: a(1), u(2).  Subst to cg: ua(1), ug(2).  Subst to gu: au(1), gc(1).  Subst to u: a(3), c(1).  Subst to ua: cg(1), gc(1), gu(1), ug(1).  Subst to ug: cg(1), ua(2).  (root -> Y)
#=GF LEAF       S-cg-ug-gc-au-cg-L-S(gu-L-u-a-a-S(ua-ua-aa-au-L-u-c-u-g-u)a)u-c-g-c-I-a-a-u
#=GF BRANCH     Length 2.  Loop delete: u(1).  Loop insert: c(1).  Subst to a: c(1), g(2), u(3).  Subst to au: cg(1), gc(4), gu(1), ug(2).  Subst to c: a(2), g(3), u(8).  Subst to cc: au(1).  Subst to cg: ua(4), ug(1).  Subst to g: a(2), u(2).  Subst to gc: au(1), cg(1), gu(4).  Subst to gu: au(3), gc(1), ua(1).  Subst to u: a(2), c(12), g(2).  Subst to ua: au(1), cg(1), gc(2), uc(1).  Subst to uc: cc(1).  Subst to ug: cg(1), gc(1), ua(1).  (root -> Z)
#=GF LEAF       S-ug-ua-au-au-gc-L-S(gu-L-u-a-c-S(gc-cg-cg-cg-L-D-u-a-u-u)u)g-c-c-a-I-u-u-a-g
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 4 1 5
#=GF ANCLOOPLEN 5 4 7
root            cgggugugacugugcaguauagacucgu-a-uggcccg
#=GR root SS    <<<<<<...<<<<.....>>>>.>....-.-..>>>>>
X               gcggcguaauuauucagcauaaacucuuga-gagcugc
#=GR X SS       <<<<<<...<<<<.....>>>>.>......-..>>>>>
Y               cugacguaauuaaucuguuaaaauucgc-a-augucgg
#=GR Y SS       <<<<<<...<<<<.....>>>>.>....-.-..>>>>>
Z               uuaagguacgccc-uauugggcuugcca-uuagcuuag
#=GR Z SS       <<<<<<...<<<<-....>>>>.>....-....>>>>>
#=GC SS_cons    <<<<<<...<<<<.....>>>>.>.........>>>>>
//
