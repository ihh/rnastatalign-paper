# STOCKHOLM 1.0
#=GF         NH (X:1,Y:1,Z:2)root;
#=GF       ARGS -seed 1240093932 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF       SEED 1240093932
#=GF      PARAM stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF      PARAM lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF       ROOT S-ua-ua-L-g-g-u-a-S(cg-ua-L-S(gc-gc-au-ug-L-c-a-g-a)a-a-a-g)g-a-a
#=GF     BRANCH Length 1.  Subst to a: g(1), u(1).  Subst to au: gu(1).  Subst to c: a(2), u(3).  Subst to cg: au(1), gc(1).  Subst to g: c(2), u(1).  Subst to gc: ua(1).  Subst to gu: au(1).  Subst to u: a(2), c(2), g(5).  Subst to ug: cg(1).  (root -> X)
#=GF       LEAF S-ua-gc-L-g-a-c-a-S(ug-ua-L-S(gc-cg-cg-ug-L-g-a-u-a)u-u-a-u)c-a-u
#=GF     BRANCH Length 1.  Loop delete: a(1).  Loop insert: c(1).  Subst to a: g(1).  Subst to au: gc(2).  Subst to c: a(1), g(1), u(2).  Subst to cg: gu(2), ua(1).  Subst to g: a(1), c(1), u(1).  Subst to gc: cg(1), ua(1).  Subst to gu: au(2).  Subst to u: a(3), c(1), g(2).  Subst to ua: au(1).  Subst to ug: ua(1).  (root -> Y)
#=GF       LEAF S-cg-ua-L-g-u-g-g-a-S(cg-ug-L-S(cg-gc-gc-ug-L-u-a-g-D)c-u-a-g)c-u-c
#=GF     BRANCH Length 2.  Loop insert: c(1).  Stem delete: au(1).  Subst to a: g(3), u(2).  Subst to au: gc(1), ua(3).  Subst to c: a(5), g(1), u(2).  Subst to cg: ua(1), ug(1).  Subst to g: a(3), c(1), u(2).  Subst to gc: au(2).  Subst to gu: au(1), ua(1).  Subst to u: a(3), c(3), g(4).  Subst to ua: au(1), gc(1), ug(1).  Subst to ug: cg(2).  Subst to uu: ug(1).  (root -> Z)
#=GF       LEAF S-gc-uu-L-c-g-c-a-I-u-S(cg-gc-L-S(ua-gu-D-gu-L-g-u-c-u)u-c-c-a)a-u-g
#=GF   ANCSTEMS 3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 4 2 2
#=GF ANCLOOPLEN 4 4 7
      X         uggacauugccugauagggcuuauagcauca
#=GR X       SS <<....<<<<<<....>>>>....>>...>>
      Y         cuguggacucgguuaggccgcuagggcucag
#=GR Y       SS <<.....<<<<<<...>>>>....>>...>>
      Z         gucgcaucgugggucuuuauccacgauguc
#=GR Z       SS <<.....<<<<<....>>>....>>...>>

//
