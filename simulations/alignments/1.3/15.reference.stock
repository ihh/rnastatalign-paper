# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.3)root;
#=GF ARGS       -seed 1239560782 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1239560782
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-L-S(au-gc-cg-ug-cg-ua-gc-L-c-a-u-u-g-a)u-a-g-S(gc-L-a-g-g-g-u-a-g-c-a-g)u
#=GF BRANCH     Length 1.  Loop insert: u(1).  Subst to a: g(3), u(1).  Subst to au: cu(1), gc(3), ua(1).  Subst to c: u(3).  Subst to cu: gu(1).  Subst to g: a(1), u(2).  Subst to gu: au(1), uu(1).  Subst to u: a(3), c(1), g(1).  Subst to ua: cg(1), ug(1), uu(1).  Subst to ug: cg(1).  Subst to uu: au(2).  (root -> node1)
#=GF NODE       S-L-S(au-gu-ug-ua-ua-ua-au-L-c-g-g-a-c-g-c)a-u-a-S(au-L-u-a-g-a-u-a-g-c-a-g)u
#=GF BRANCH     Length 1.  Loop delete: g(1), u(1).  Subst to a: g(2), u(2).  Subst to au: gc(1), ua(1), uu(1).  Subst to c: a(1), g(2), u(1).  Subst to ca: ua(1).  Subst to cg: ca(1), ug(2).  Subst to g: a(2), c(1), u(2).  Subst to gc: au(2), cg(1), gu(1).  Subst to u: a(2), c(1), g(2).  Subst to ug: gc(1), ua(1).  Subst to uu: ug(1).  (node1 -> X)
#=GF LEAF       S-L-S(au-au-cg-cg-au-gc-gc-L-c-a-c-a-c-u-D)a-D-a-S(au-L-c-u-g-g-g-u-a-g-c-c)a
#=GF BRANCH     Length 1.  Loop delete: a(1).  Loop insert: a(1).  Subst to a: g(1), u(2).  Subst to ac: gc(1).  Subst to au: ac(1), gu(2).  Subst to c: a(2), g(2), u(2).  Subst to cg: au(3), ug(2).  Subst to g: a(1), c(2), u(2).  Subst to gc: ua(2).  Subst to gu: au(1).  Subst to u: a(2), c(3), g(3).  Subst to ua: au(1), ug(1).  Subst to ug: cg(1), ua(1).  (node1 -> Y)
#=GF LEAF       S-L-S(au-cg-cg-ua-gc-ua-cg-L-u-g-u-a-g-g-g)c-u-u-a-S(cg-L-g-a-u-c-a-D-a-c-c-c)u
#=GF BRANCH     Length 1.3.  Loop delete: a(1), g(1).  Loop insert: L(1).  Subst to a: c(3), g(1), u(2).  Subst to c: g(2), u(5).  Subst to cg: gc(1), ug(2).  Subst to g: a(4), c(1).  Subst to gc: cg(1), ua(1).  Subst to u: a(1), c(2), g(3).  Subst to ua: au(1), cg(1).  Subst to ug: cg(2).  (root -> Z)
#=GF LEAF       S-L-a-S(ua-gc-cg-ua-ug-gc-gc-L-g-a-c-I-u-a-g)u-I-a-D-S(gc-L-u-u-c-a-g-D-u-a-g-g)c
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 1 7 0
#=GF ANCLOOPLEN 6 10 4
root            -agcucugcau-ugacagggcuu-aggaggguagcagcu
#=GR root SS    -<<<<<<<...-...>>>>>>>.-..<..........>.
node1           -aguuuuacggacgcuaaaguua-uaauagauagcaguu
#=GR node1 SS   -<<<<<<<.......>>>>>>>.-..<..........>.
X               -aaccaggcacacu-ccugguua--aacuggguagccua
#=GR X SS       -<<<<<<<......->>>>>>>.--.<..........>.
Y               -accugucuguaggggacaggucuuacgauca-acccgu
#=GR Y SS       -<<<<<<<.......>>>>>>>....<.....-....>.
Z               augcuugggac-uagccgagcau-a-guucag-uaggcc
#=GR Z SS       .<<<<<<<...-...>>>>>>>.-.-<.....-....>.
#=GC SS_cons    .<<<<<<<.......>>>>>>>....<..........>.
//
