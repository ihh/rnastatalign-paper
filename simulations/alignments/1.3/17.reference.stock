# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.3)root;
#=GF ARGS       -seed 1238421393 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238421393
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gu-cg-ua-L-g-a-u-a-a-a-g-S(ua-cg-ua-au-gc-au-cg-ga-gu-cg-au-gu-L-u-a-c-u-a-u-a)a
#=GF BRANCH     Length 1.  Loop delete: a(2), g(1).  Subst to a: g(1), u(1).  Subst to au: cg(1), gc(2), gu(1).  Subst to c: a(1), u(1).  Subst to cg: ua(2).  Subst to g: a(3), c(2), u(1).  Subst to gc: au(2), cg(1), gu(3).  Subst to gu: au(1), gc(1).  Subst to u: g(2).  Subst to ua: au(1), cg(1).  (root -> node1)
#=GF NODE       S-gc-au-cg-L-g-c-D-a-a-D-g-S(ua-ua-cg-ua-gc-au-gc-ga-gc-cg-gu-au-L-u-D-g-a-g-u-a)u
#=GF BRANCH     Length 1.  Loop insert: g(1).  Subst to a: c(1), g(1), u(1).  Subst to aa: ga(1).  Subst to au: gu(1).  Subst to c: g(2), u(1).  Subst to cg: gc(2), ua(2).  Subst to g: u(1).  Subst to gc: gu(1).  Subst to gu: cg(1).  Subst to u: a(2), c(2), g(1).  Subst to ua: aa(1), au(1), cg(1).  (node1 -> X)
#=GF LEAF       S-gc-au-cg-L-u-u-D-a-a-D-a-S(cg-ua-cg-ua-cg-au-gc-gc-ua-cg-ua-au-L-u-D-g-a-c-u-a)u-u
#=GF BRANCH     Length 1.  Loop delete: c(1), g(1).  Subst to a: g(1), u(1).  Subst to au: gc(3), gu(3).  Subst to c: a(1), g(1), u(2).  Subst to ca: ga(1), ua(1).  Subst to cg: ca(1), ua(2).  Subst to g: a(1).  Subst to gc: au(1), cg(1), gu(3).  Subst to gu: au(3), gc(2).  Subst to u: c(2), g(1).  Subst to ua: au(1), ca(1).  Subst to ug: ua(1), uu(1).  Subst to uu: cg(1).  (node1 -> Y)
#=GF LEAF       S-cg-au-gc-L-D-D-D-g-a-D-c-S(ug-cg-cg-ug-gc-au-gc-ua-gc-cg-au-au-L-u-D-c-u-a-u-a)a-I
#=GF BRANCH     Length 1.3.  Loop insert: L(1), g(1).  Stem insert: gc(1).  Subst to a: c(1), g(4), u(4).  Subst to aa: ga(1), ua(1).  Subst to ag: aa(1).  Subst to au: aa(1), gc(1), gu(1), ug(1).  Subst to c: a(3), u(5).  Subst to cg: ag(1), ua(1), ug(2).  Subst to g: a(6), u(1).  Subst to gc: au(2), cg(1), gu(3), ua(2).  Subst to gu: au(1), gc(1).  Subst to u: a(1), c(6), g(1).  Subst to ua: au(1), cg(2), gc(1).  Subst to ug: cg(2), ua(1).  (root -> Z)
#=GF LEAF       S-gu-cg-cg-L-a-c-u-a-g-a-g-a-S(gc-gc-cg-ua-au-gc-au-gc-gc-ua-gc-au-au-L-g-g-c-g-g-u-a-a)a-I
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 12 3
#=GF ANCLOOPLEN 7 8
root            gcugauaaag-ucuagacggca-g-uacuauau-uguagucuagaa-agu
#=GR root SS    <<<--------<<<<<<<<<<<-<-------->->>>>>>>>>>>-->>>
node1           gacgc-aa-g-uucugagggcg-a-u-gaguau-ugcacucagaau-guc
#=GR node1 SS   <<<--------<<<<<<<<<<<-<-------->->>>>>>>>>>>-->>>
X               gacuu-aa-a-cucucaggucu-a-u-gacuau-agaccugagaguuguc
#=GR X SS       <<<--------<<<<<<<<<<<-<-------->->>>>>>>>>>>-->>>
Y               cag---ga-c-uccugagugca-a-u-cuauau-ugcacucgggga-cug
#=GR Y SS       <<<--------<<<<<<<<<<<-<-------->->>>>>>>>>>>-->>>
Z               gccacuagagaggcuagaggugaaggcgguaauucaccucuagcca-ggu
#=GR Z SS       <<<--------<<<<<<<<<<<<<-------->>>>>>>>>>>>>-->>>
#=GC SS_cons    <<<........<<<<<<<<<<<<<........>>>>>>>>>>>>>..>>>
//
