# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.5)root;
#=GF ARGS       -seed 1238401595 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238401595
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-ug-gu-cg-gc-ua-cg-au-L-a-g-g-u-S(gc-gu-cg-gc-cg-ua-cg-cg-L-a-u-S(gc-gc-cg-L-g-u-u-c-g-g)a-u-a-g)a
#=GF BRANCH     Length 1.  Subst to a: g(3).  Subst to au: gc(2).  Subst to c: a(1), g(1), u(4).  Subst to cg: gu(1), ua(2), ug(2).  Subst to g: a(2), u(1).  Subst to gc: au(1), cg(2), gu(3).  Subst to gu: au(1), ug(1).  Subst to u: a(2), c(1), g(1).  Subst to ua: cg(2).  Subst to ug: cg(4).  (root -> node1)
#=GF NODE       S-ua-gc-cg-gc-cg-cg-gc-L-c-a-u-u-S(gc-gc-ua-gc-gc-ug-gc-ug-L-a-u-S(gc-au-cg-L-g-c-g-c-a-g)u-c-c-g)c
#=GF BRANCH     Length 1.  Loop insert: g(1).  Subst to a: c(1), g(3), u(4).  Subst to au: cg(1), gc(2), gu(1).  Subst to c: g(1), u(2).  Subst to cg: au(1), gc(1), ua(2), ug(1).  Subst to g: a(1), c(1), u(2).  Subst to gc: au(1), cg(1), gu(1), ua(1).  Subst to gu: au(1), gc(3).  Subst to u: c(6).  Subst to ua: ug(1).  (node1 -> X)
#=GF LEAF       S-cg-gc-cg-gc-au-cg-au-L-u-a-a-g-S(cg-gc-gc-gc-gu-cg-gc-cg-L-a-a-S(gu-gc-cg-L-a-a-a-S(L-a)c-a-g)g-u-a-g)a
#=GF BRANCH     Length 1.  Stem delete: cg(1).  Subst to a: c(1), g(3), u(1).  Subst to au: cg(1), gc(4), gu(2).  Subst to c: a(1), g(1), u(3).  Subst to cg: au(2), gc(1), ua(2), ug(2).  Subst to g: a(1), c(1), u(3).  Subst to gc: au(1), gu(2), ua(1), ug(1).  Subst to gu: au(1), gc(3).  Subst to u: c(6), g(2).  Subst to ua: cg(2), gc(3).  Subst to ug: ua(2).  (node1 -> Y)
#=GF LEAF       S-cg-gc-au-cg-ua-cg-au-L-u-a-c-u-S(ua-au-gc-cg-cg-D-gc-ug-L-a-g-S(au-cg-cg-L-g-c-a-I(I-I)c-a-g)u-u-a-a)u
#=GF BRANCH     Length 1.5.  Loop insert: S(1).  Subst to a: g(5), u(4).  Subst to au: cg(1), gc(2), gu(1), ua(1).  Subst to c: g(1), u(3).  Subst to cg: gc(1), ua(1), ug(3).  Subst to g: a(3), c(1), u(1).  Subst to gc: au(3), cg(3), gu(2).  Subst to gu: cg(1), gc(1).  Subst to u: a(4), c(1), g(3).  Subst to ua: au(1), cg(1).  Subst to ug: cg(2), uu(1).  Subst to uu: ua(1).  (root -> Z)
#=GF LEAF       S-gc-gc-cg-au-ug-gu-cg-L-u-a-a-g-S(gc-gc-cg-gc-gc-au-cg-gc-L-a-u-S(gc-gc-ua-L-a-u-c-I(I-I)a-g-c)a-c-u-a)u-a
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 3 8 7
#=GF ANCLOOPLEN 6 6 5
root            ugcgucaagguggcgcuccauggcguu-cgggccauagggagcguc-augacgug
#=GR root SS    <<<<<<<----<<<<<<<<--<<<------->>>---->>>>>>>>-->>>>>>>
node1           ugcgccgcauuggugguguaugacgcg-caggucuccggcgccacc-ccggcgca
#=GR node1 SS   <<<<<<<----<<<<<<<<--<<<------->>>---->>>>>>>>-->>>>>>>
X               cgcgacauaagcggggcgcaaggcaaaacaggcuguaggcgucccg-augucgcg
#=GR X SS       <<<<<<<----<<<<<<<<--<<<------->>>---->>>>>>>>-->>>>>>>
Y               cgacucauacuuagcc-guagaccgca-caggguuuaagc-ggcua-uugagucg
#=GR Y SS       <<<<<<<----<<<<<-<<--<<<------->>>---->>->>>>>-->>>>>>>
Z               ggcaugcuaagggcggacgaugguauc-agcaccacuacguccgccuagugugcc
#=GR Z SS       <<<<<<<----<<<<<<<<--<<<------->>>---->>>>>>>>-->>>>>>>
#=GC SS_cons    <<<<<<<....<<<<<<<<..<<<.......>>>....>>>>>>>>..>>>>>>>
//
