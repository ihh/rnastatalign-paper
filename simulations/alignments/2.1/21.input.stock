# STOCKHOLM 1.0
#=GF         NH ((X:1,Y:1):1,Z:2.1)root;
#=GF       ARGS -seed 1238419971 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF       SEED 1238419971
#=GF      PARAM stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF      PARAM lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF       ROOT S-ua-cg-ua-au-gc-gu-gc-gc-L-c-a-S(cg-ua-L-a-u-a-c-a)S(cg-gc-gc-L-u-c-g)a-a-a-u
#=GF     BRANCH Length 1.  Stem insert: gc(1).  Subst to a: c(2), g(2), u(1).  Subst to au: cg(1), gc(2).  Subst to c: u(2).  Subst to cg: au(1), gc(1), gg(1), ua(2).  Subst to g: a(3), c(1), u(3).  Subst to gc: au(1), cg(2), gu(1).  Subst to gg: gc(1).  Subst to u: a(2), c(1), g(2).  Subst to ua: cg(1), gc(1), ug(1).  Subst to ug: cg(1), gc(1).  (root -> node1)
#=GF       NODE S-gc-cg-ug-cg-au-au-gc-cg-L-u-g-S(ua-ua-L-u-g-a-a-g)S(cg-gc-ua-ua-L-a-c-a)a-a-a-g
#=GF     BRANCH Length 1.  Loop delete: u(1).  Loop insert: a(1).  Subst to a: g(2), u(2).  Subst to au: gc(1), ua(2).  Subst to c: g(1), u(1).  Subst to cg: gc(1), ua(2), ug(1).  Subst to g: a(1), u(1).  Subst to ga: gc(1).  Subst to gc: cg(1), ga(1), gu(1).  Subst to gu: au(1).  Subst to u: a(3), c(3), g(2).  Subst to ua: au(1), cg(4), ug(1).  Subst to ug: ua(1).  (node1 -> X)
#=GF       LEAF S-ua-ua-ua-gc-au-au-gc-cg-L-u-u-S(ua-ua-L-a-a-a-a-u)S(cg-cg-au-gc-L-u-a-a-a)D-a-u-g
#=GF     BRANCH Length 1.  Subst to a: g(4), u(2).  Subst to au: ua(1).  Subst to c: u(2).  Subst to cg: gc(1), ug(1).  Subst to g: a(1), c(1), u(1).  Subst to gc: au(1), ua(1).  Subst to gu: gc(1).  Subst to u: a(3), c(1), g(2).  Subst to ua: cg(3), ug(1).  Subst to ug: cg(1).  (node1 -> Y)
#=GF       LEAF S-gu-ua-ua-ua-au-au-cg-ua-L-c-g-S(ua-gc-L-a-a-a-a-a)S(cg-gc-gc-ua-L-a-a-a-I)u-a-u-u
#=GF     BRANCH Length 2.1.  Loop delete: a(1), u(1).  Stem insert: au(1).  Subst to a: c(1), g(3), u(2).  Subst to ac: cc(1).  Subst to au: ac(1), gc(4), gu(3), ua(3).  Subst to c: a(3), g(2), u(5).  Subst to cc: au(1).  Subst to cg: au(1), gc(1), ua(1), ug(1).  Subst to g: a(5), u(2).  Subst to gc: au(4), cg(1), gu(3), ua(1), ug(1).  Subst to gu: au(2), gc(4).  Subst to u: a(1), c(8), g(1).  Subst to ua: au(1), cg(1), ug(2).  Subst to ug: au(1), cg(2), ua(1).  (root -> Z)
#=GF       LEAF S-gc-au-cg-gc-gc-gc-gc-cg-gc-L-a-c-S(cg-gc-L-c-D-g-u-a)S(au-gu-I-ua-L-u-c-u-I)D-c-g-a
#=GF   ANCSTEMS 3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 3 2 8
#=GF ANCLOOPLEN 5 3 6
      X         uuugaagcuuuuaaaauaaccaguaaacuggauggcuucaaa
#=GR X       SS <<<<<<<<..<<.....>><<<<....>>>>...>>>>>>>>
      Y         guuuaacucgugaaaaacacgguaaaaccguauuaguuaaau
#=GR Y       SS <<<<<<<<..<<.....>><<<<...>>>>....>>>>>>>>
      Z         gacggggcgaccgcguacgaguucuauucgacgccccguc
#=GR Z       SS <<<<<<<<<..<<....>><<<...>>>...>>>>>>>>>

//
