# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:2.1)root;
#=GF ARGS       -seed 1240118661 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240118661
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-gc-L-a-u-S(ua-ua-ua-au-gu-cg-cg-ua-L-c-S(au-ua-L-a-a-u-g-a)g-g-c-g)u
#=GF BRANCH     Length 1.  Loop delete: u(1).  Subst to a: u(1).  Subst to au: gc(1), ua(1).  Subst to c: g(1), u(2).  Subst to cg: au(1), ua(1).  Subst to g: u(1).  Subst to gc: au(1), gu(1), ua(1).  Subst to u: a(2), c(2), g(1).  Subst to ua: au(1).  (root -> X)
#=GF LEAF       S-ua-gc-L-a-D-S(cg-ua-gc-gc-gc-cg-cg-ua-L-c-S(au-cg-L-u-a-g-c-a)g-u-c-g)u
#=GF BRANCH     Length 1.  Loop delete: S(1), a(1).  Loop insert: c(1).  Start-of-stem insert: S(1).  Stem insert: cg(1).  Subst to a: g(2).  Subst to au: gc(1).  Subst to c: u(2).  Subst to ca: cg(1).  Subst to cg: ca(1), gc(1), ua(3).  Subst to g: u(1).  Subst to gc: au(1), gu(1).  Subst to gu: gc(1).  Subst to u: c(3), g(1).  Subst to ua: cg(1).  (root -> Y)
#=GF LEAF       S-gu-cg-L-D-g-S(gc-ua-cg-ua-au-gc-cg-cg-cg-ua-L-c-u-D(D-D-D-D-D-D-D-D)u-a-u-a)u
#=GF BRANCH     Length 2.1.  Loop insert: g(1), u(2).  Subst to a: g(3), u(4).  Subst to au: cg(1), gc(3), gu(1), ua(1).  Subst to c: a(1), g(2), u(4).  Subst to cg: ua(6), ug(2).  Subst to g: a(3), c(3).  Subst to gc: au(3), gu(3).  Subst to gu: au(2), gc(2).  Subst to u: a(3), c(3), g(3).  Subst to ua: cg(3), ug(3).  Subst to ug: au(1), cg(4), ua(1).  (root -> Z)
#=GF LEAF       S-gc-au-L-c-c-S(I-ug-cg-ua-ua-gc-cg-ua-I-au-L-a-I-S(gu-gc-L-u-g-u-u-u-a-a-g)a-c-u-a)u
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 2 8 2
#=GF ANCLOOPLEN 5 5 3
root            ggau-uuuagcc-uc-auaau--g-aauggcga-gguuaaa-ucc
#=GR root SS    <<..-<<<<<<<-<.-<<...--.-.>>....>->>>>>>>-.>>
X               uga--cugggcc-uc-acuag--c-agugucga-ggcccag-uca
#=GR X SS       <<.--<<<<<<<-<.-<<...--.-.>>....>->>>>>>>-.>>
Y               gc-ggucuagcccucu------------uauaagggcuagacugu
#=GR Y SS       <<-.<<<<<<<<<<..------------....>>>>>>>>>>.>>
Z               gacc-ucuugcu-aa-gguguuuaagcuacuau-agcaagg-uuc
#=GR Z SS       <<..-<<<<<<<-<.-<<........>>....>->>>>>>>-.>>
#=GC SS_cons    <<..<<<<<<<<<<..<<........>>....>>>>>>>>>>.>>
//
