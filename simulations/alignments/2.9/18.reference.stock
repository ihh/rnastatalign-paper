# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:2.9)root;
#=GF ARGS       -seed 1238392443 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238392443
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-ua-au-gc-cg-ua-cg-gc-ua-L-c-a-g-g-g-a-S-cg-L-S(cg-gc-ua-ug-au-au-au-ua-L-c-g-u)g-c-u
#=GF BRANCH     Length 1.  Loop delete: g(1), u(1).  Loop insert: a(2), g(1).  Subst to a: c(1), g(2), u(2).  Subst to aa: ua(1).  Subst to au: aa(1), gc(3), ua(1), ug(1).  Subst to c: u(1).  Subst to cg: gc(1), ua(3), ug(1).  Subst to g: a(1), u(2).  Subst to gc: au(2), gu(1), ua(1).  Subst to gu: au(1), ua(1).  Subst to u: a(3), c(2), g(2).  Subst to ua: au(1), cg(3), ug(2).  Subst to ug: cg(1), ua(2).  (root -> node1)
#=GF NODE       S-cg-au-gc-cg-au-ua-ua-cg-L-c-a-g-u-a-u-g-D-g-S-cg-L-S(au-gc-cg-au-au-au-gc-gu-L-u-D-u)u-g-a
#=GF BRANCH     Length 1.  Loop delete: a(1).  Subst to a: g(4), u(1).  Subst to au: gc(1), gu(2).  Subst to c: u(1).  Subst to cg: gc(2), ug(2).  Subst to g: a(2), u(1).  Subst to gc: au(1), gu(2), ua(2).  Subst to gu: au(3), gc(1).  Subst to u: g(1).  Subst to ua: cg(2), gc(1).  Subst to ug: cg(2), ua(1).  (node1 -> X)
#=GF LEAF       S-cg-gu-cg-ua-au-au-gc-ug-L-c-a-a-c-D-g-u-D-a-S-cg-L-S(au-gc-cg-cg-au-ua-gc-au-L-u-D-a)u-a-g
#=GF BRANCH     Length 1.  Stem insert: au(1).  Subst to a: g(1), u(1).  Subst to au: cg(1), gc(3).  Subst to c: g(1), u(2).  Subst to cg: au(1), ua(4).  Subst to g: a(1), u(1).  Subst to gc: au(1), gu(1).  Subst to gu: uu(1).  Subst to u: a(2), c(1), g(1).  Subst to ua: au(2), cg(4), gc(1).  Subst to uu: ua(1).  (node1 -> Y)
#=GF LEAF       S-au-au-cg-ua-cg-gu-ua-cg-L-c-u-g-a-a-u-g-D-u-S-ua-L-S(au-au-cg-au-ua-au-cg-ua-gc-L-u-D-g)c-c-u
#=GF BRANCH     Length 2.9.  Loop delete: a(1).  Loop insert: L(1), S(1), c(1).  Subst to a: g(8), u(4).  Subst to ag: au(1).  Subst to au: gc(4), gu(4), ua(3).  Subst to c: a(2), g(1), u(7).  Subst to cg: ag(1), au(3), gc(3), ua(4), ug(3).  Subst to g: a(3), c(3), u(2).  Subst to gc: au(4), cg(2), gu(2), ua(2).  Subst to gu: au(5), gc(2).  Subst to u: a(3), c(8), g(1).  Subst to ua: cg(4), ug(4).  Subst to ug: cg(5), gu(1), ua(1).  (root -> Z)
#=GF LEAF       S-ua-gc-gc-ua-au-cg-au-gc-L-a-u-D-a-I-g-I-I-a-a-S-cg-L-S(cg-cg-cg-ua-ug-cg-I-cg-gc-L-u-c-u)a-c-a-g-g
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 8 1 8
#=GF ANCLOOPLEN 3 3 6
root            uagcucgu-cag-g--gaccguuaa-aucguau-uugacg-gcu-gacgagcua
#=GR root SS    <<<<<<<<----------<<<<<<<-<<--->>->>>>>>----->>>>>>>>>
node1           cagcauuc-caguaug-gcagcaaa-ggu-uuc-uuugcu-uga-ggaaugcug
#=GR node1 SS   <<<<<<<<----------<<<<<<<-<<--->>->>>>>>----->>>>>>>>>
X               cgcuaagu-caac-gu-acagccau-gau-auc-auggcu-uag-ggcuuagug
#=GR X SS       <<<<<<<<----------<<<<<<<-<<--->>->>>>>>----->>>>>>>>>
Y               aacucguc-cugaaug-uuaacauacugu-gcaguauguu-ccu-agaugaguu
#=GR Y SS       <<<<<<<<----------<<<<<<<<<<--->>>>>>>>>----->>>>>>>>>
Z               ugguacagau-a-g--aaccccuuc-cgucucg-ggagggacagggcuguacca
#=GR Z SS       <<<<<<<<----------<<<<<<<-<<--->>->>>>>>----->>>>>>>>>
#=GC SS_cons    <<<<<<<<..........<<<<<<<<<<...>>>>>>>>>.....>>>>>>>>>
//
