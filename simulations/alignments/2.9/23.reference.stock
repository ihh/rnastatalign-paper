# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:2.9)root;
#=GF ARGS       -seed 1238558341 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238558341
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-L-g-a-u-a-a-u-a-u-S-cg-ua-gc-au-uu-L-c-S(cg-ug-cg-gc-L-g-a-a-g-g-c-c-g)u-g
#=GF BRANCH     Length 1.  Subst to a: g(4), u(3).  Subst to au: gc(2), gu(1), ua(1).  Subst to c: a(4), g(1), u(3).  Subst to cg: ug(1).  Subst to g: a(1), c(1), u(1).  Subst to gc: au(3), cg(1).  Subst to gu: au(1), gc(1), uu(1).  Subst to u: a(1), c(1), g(1).  Subst to ua: cg(1), gu(1), ug(1).  Subst to ug: cg(1).  (root -> node1)
#=GF NODE       S-L-a-c-c-c-a-c-a-c-S-ua-ua-gc-gc-au-L-c-S(ua-cg-gu-gc-L-a-a-a-g-a-g-c-g)c-c
#=GF BRANCH     Length 1.  Loop delete: g(1).  Subst to a: g(3), u(1).  Subst to au: gu(1).  Subst to c: a(1), u(3).  Subst to cg: gc(1), ug(1).  Subst to cu: uc(1).  Subst to g: a(1), c(2), u(2).  Subst to gc: gu(1), ua(1).  Subst to gg: au(1).  Subst to gu: gc(1), ua(1).  Subst to u: a(1), c(8).  Subst to ua: cg(1).  Subst to uc: gc(1).  Subst to ug: gg(1).  (node1 -> X)
#=GF LEAF       S-L-a-c-g-a-a-a-a-c-S-ua-cu-gu-cg-cg-L-c-S(au-ua-gc-gc-L-a-a-u-g-a-g-g-u)u-D
#=GF BRANCH     Length 1.  Loop delete: a(1).  Loop insert: a(1).  Subst to a: c(2), g(1), u(3).  Subst to au: ua(1), uu(1).  Subst to c: g(1), u(4).  Subst to cg: gc(1), gu(1).  Subst to g: a(3), c(1), u(1).  Subst to gc: gu(2), ua(1).  Subst to gu: au(2), gc(1).  Subst to u: a(2), c(8), g(1).  Subst to ua: cg(1).  Subst to uu: gu(1).  (node1 -> Y)
#=GF LEAF       S-L-g-a-g-u-c-a-c-a-g-S-ua-au-gc-gc-gc-L-D-S(ua-cg-gc-cg-L-g-a-u-u-c-a-a-g)c-a
#=GF BRANCH     Length 2.9.  Loop delete: a(1).  Loop insert: S(1), a(1), c(1), g(1).  Subst to a: c(2), g(4), u(2).  Subst to ac: gc(1).  Subst to au: cg(2), gc(2), gu(1), uu(1).  Subst to c: a(1), g(1), u(13).  Subst to ca: cg(1).  Subst to cg: ca(1), ug(4).  Subst to g: a(4), c(3), u(4).  Subst to gc: ac(1), au(3), cg(1), uu(1).  Subst to gu: gc(1).  Subst to u: a(1), c(11), g(7).  Subst to ua: au(2), ug(1).  Subst to ug: cg(2), ua(2).  Subst to uu: ua(1).  (root -> Z)
#=GF LEAF       S-L-u-D-u-a-a-I-g-a-a-c-u-S-au-cg-gc-gc-gc-L-u-S(gc-au-ua-cg-L-g-a-u-g-a-g-g-S(cg-L-c-c-g)a-c)a-g
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 4 5 0
#=GF ANCLOOPLEN 8 3 8
root            gaua--au-aucugauccucggaaggcc------gcggguguucag
#=GR root SS    -----------<<<<<-<<<<-------------->>>>-->>>>>
node1           accc--ac-acuuggacucggaaagagc------gcugaccuccaa
#=GR node1 SS   -----------<<<<<-<<<<-------------->>>>-->>>>>
X               acga--aa-acucgcccauggaaugagg------uccauu-gguua
#=GR X SS       -----------<<<<<-<<<<-------------->>>>-->>>>>
Y               gagu-cac-aguaggg-ucgcgauucaa------ggcgacacccua
#=GR Y SS       -----------<<<<<-<<<<-------------->>>>-->>>>>
Z               u-uaa-gaacuacgggugaucgaugaggcccggacgaucagcccgu
#=GR Z SS       -----------<<<<<-<<<<-------<--->-->>>>-->>>>>
#=GC SS_cons    ...........<<<<<.<<<<.......<...>..>>>>..>>>>>
//
