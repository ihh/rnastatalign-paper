# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.8)root;
#=GF ARGS       -seed 1237889958 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1237889958
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-cg-L-c-a-S(gc-L-a-g-u-a-a)u-u-a-u-g-c-g
#=GF BRANCH     Length 1.  Subst to a: g(1), u(1).  Subst to au: cg(1), gc(1).  Subst to c: g(1), u(1).  Subst to cg: gc(1).  Subst to g: a(1).  Subst to gc: au(1).  Subst to u: g(1).  Subst to ua: au(1).  (root -> node1)
#=GF NODE       S-ua-cg-L-c-a-S(gc-L-a-g-a-a-a)u-c-a-u-c-c-u
#=GF BRANCH     Length 1.  Loop delete: c(1).  Subst to a: u(1).  Subst to c: a(3), u(1).  Subst to cg: ua(1).  Subst to g: a(2), u(1).  Subst to u: a(1), c(4), g(1).  Subst to ua: cg(1).  (node1 -> X)
#=GF LEAF       S-cg-ua-L-u-u-S(gc-L-g-u-g-a-u)c-u-c-c-u-D-g
#=GF BRANCH     Length 1.  Loop delete: c(1).  Loop insert: S(1), a(1), c(1).  Subst to a: c(1), g(1), u(1).  Subst to au: cg(1), gu(1), ua(1).  Subst to c: g(1), u(2).  Subst to cg: gc(1), ua(2).  Subst to g: a(1), c(1), u(1).  Subst to gc: ua(1).  Subst to gu: au(1).  Subst to u: a(1), c(3).  Subst to ua: cg(1), ug(1).  (node1 -> Y)
#=GF LEAF       S-cg-au-L-g-a-S(cg-L-a-u-c-a-a-g)S(cg-ua-au-cg-gc-L-a-a)a-c-a-g-u-g-D-u
#=GF BRANCH     Length 1.8.  Subst to a: g(2), u(6).  Subst to c: g(1), u(4).  Subst to cg: gc(1), ua(1).  Subst to g: a(5), c(1), u(1).  Subst to gc: cg(1).  Subst to u: a(5), c(3), g(2).  Subst to ua: cg(1).  (root -> Z)
#=GF LEAF       S-gc-cg-L-c-u-S(gc-L-g-g-I-u-a-g)I(I-I-I-I-I-I-I-I)u-a-g-g-c-I-c-a
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 1 2
#=GF ANCLOOPLEN 5 9
root            gccagag-uaac-------uuaug-cg-----gc
#=GR root SS    <<--<------>-------------------->>
node1           uccagag-aaac-------ucauc-cu-----ga
#=GR node1 SS   <<--<------>-------------------->>
X               cuuuggu-gauc-------cuccu--g-----ag
#=GR X SS       <<--<------>-------------------->>
Y               cagacaucaaggcuacgaaacagug-ucguagug
#=GR Y SS       <<--<------><<<<<---------->>>>>>>
Z               gccuggg-uagc-------uaggc-ca-----gc
#=GR Z SS       <<--<------>-------------------->>
#=GC SS_cons    <<..<......><<<<<..........>>>>>>>
//
