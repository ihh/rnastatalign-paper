# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:1.8)root;
#=GF ARGS       -seed 1240125597 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240125597
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-gc-L-a-u-u-a-c-S(au-gu-cg-au-ua-cg-cg-ug-L-g-c-a)c-g
#=GF BRANCH     Length 1.  Subst to a: g(2).  Subst to au: gu(1), ua(1).  Subst to c: u(1).  Subst to cg: au(1), gc(1), ug(1).  Subst to g: a(1), c(2).  Subst to gc: au(1), cg(2), gu(1), ua(1).  Subst to gg: gc(1).  Subst to gu: gc(1).  Subst to u: a(2), c(2).  Subst to ua: cg(2), gc(1), ug(1).  Subst to ug: cg(1), ua(1).  (root -> X)
#=GF LEAF       S-gg-ua-L-u-u-g-a-u-S(au-au-gc-gc-ua-gc-ug-cg-L-g-g-a)u-u
#=GF BRANCH     Length 1.  Loop delete: u(1).  Subst to a: g(1), u(1).  Subst to au: gc(1).  Subst to c: u(2).  Subst to cg: au(1), ug(1).  Subst to g: c(2).  Subst to gc: au(2), gu(2).  Subst to gu: gc(2).  Subst to u: c(2), g(1).  (root -> Y)
#=GF LEAF       S-gc-gc-L-a-g-D-a-u-S(gc-gu-cg-cg-ua-cg-cg-cg-L-g-a-a)c-a
#=GF BRANCH     Length 1.8.  Loop delete: u(1).  Subst to a: c(2), g(1), u(1).  Subst to au: cg(1), gc(2).  Subst to c: a(1), g(1), u(4).  Subst to cg: ua(2), ug(1).  Subst to g: a(1), c(1).  Subst to gc: au(2), gu(1), ua(1).  Subst to u: a(1), c(4).  Subst to ua: cg(1), gc(1).  (root -> Z)
#=GF LEAF       S-gc-au-L-a-D-u-g-g-S(cg-gc-au-au-cg-cg-gc-cg-L-a-a-a)c-c
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 8 2
#=GF ANCLOOPLEN 3 7
root            ggauuacagcauccugcagggauguucgcc
#=GR root SS    <<.....<<<<<<<<...>>>>>>>>..>>
X               guuugauaaggugucggaggcaccuuuuag
#=GR X SS       <<.....<<<<<<<<...>>>>>>>>..>>
Y               ggag-auggccucccgaagggagguccacc
#=GR Y SS       <<..-..<<<<<<<<...>>>>>>>>..>>
Z               gaa-uggcgaaccgcaaagcgguucgccuc
#=GR Z SS       <<.-...<<<<<<<<...>>>>>>>>..>>
#=GC SS_cons    <<.....<<<<<<<<...>>>>>>>>..>>
//
