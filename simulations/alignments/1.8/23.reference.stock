# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.8)root;
#=GF ARGS       -seed 1238395289 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238395289
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-L-g-a-S(cg-L-c-g-c-g-S-gc-L-u-c-a)a
#=GF BRANCH     Length 1.  Loop delete: u(1).  Loop insert: L(1).  Subst to a: g(2), u(1).  Subst to au: cg(1), gc(1).  Subst to c: g(1).  Subst to cg: ua(1).  Subst to g: a(2), c(1), u(3).  Subst to gc: au(1), gu(1), ua(1).  Subst to u: a(4), c(2), g(3).  Subst to ua: cg(2).  Subst to ug: ua(1).  (root -> node1)
#=GF NODE       S-L-u-a-S(cg-L-S(gc-au-ua-ug-gc-L-g-g-a-g-a-u-S-cg-gc-cg-au-L-a-S(L-a-a-D-a-a)u-g)g-g-u-g-S-gc-L-c-g-a)u
#=GF BRANCH     Length 1.  Loop insert: S(1), c(1).  Stem delete: au(1).  Subst to a: c(1), g(6), u(2).  Subst to au: gc(3), gu(1).  Subst to c: a(2), g(2), u(2).  Subst to cg: ua(2).  Subst to g: a(3), c(1), u(3).  Subst to gc: au(2), gu(1), ua(1).  Subst to gu: au(1), cg(1), uu(1).  Subst to u: a(5), g(4).  Subst to ua: cg(1), uc(1), ug(1).  Subst to uc: gc(1).  Subst to uu: gu(1).  (node1 -> X)
#=GF LEAF       S-L-c-a-S(cg-L-S(cg-gc-gc-ua-D-L-g-a-c-a-u-c-u-S-cg-gc-au-gc-L-u-S(L-u-a-D-a-a)c-a)u-g-u-u-S-au-L-c-a-a)u-g
#=GF BRANCH     Length 1.  Loop delete: u(1).  Loop insert: a(1).  Stem insert: gc(1).  Subst to a: g(8), u(6).  Subst to au: gc(1), gu(1).  Subst to c: a(2), u(2).  Subst to cg: au(1).  Subst to g: a(6), c(1), u(2).  Subst to gc: au(1), gu(1).  Subst to gu: au(1), gc(2).  Subst to u: a(3), c(3), g(2).  Subst to ua: cg(1), ug(1).  Subst to ug: cg(1).  (node1 -> Y)
#=GF LEAF       S-L-g-g-S(cg-L-S(ug-gc-ug-ua-ua-gc-L-D-u-g-I-a-a-a-g-S-ua-gc-cg-au-L-a-S(L-a-a-D-a-c)u-g)g-a-a-g-S-gu-L-a-a-a)I-a
#=GF BRANCH     Length 1.8.  Loop insert: u(1).  Start-of-stem insert: S(1).  Subst to a: c(1), g(2), u(3).  Subst to au: gc(2), uu(1).  Subst to c: a(1), g(2), u(2).  Subst to cg: au(1).  Subst to g: a(2), c(2), u(1).  Subst to gc: cg(1).  Subst to u: a(3), c(5), g(1).  Subst to ua: cg(1).  Subst to uu: ua(1).  (root -> Z)
#=GF LEAF       S-L-g-u-g-S(au-au-L-I(I-I-I-I-I-I-I-I-I-I-I-I-I-I-I-I-I-I-I-I-I-I-I(I-I-I-I-I-I)I-I)u-u-g-a-S-ua-L-u-a-a)I-u
#=GF ANCSTEMS   3 (total) 2 (nonempty)
#=GF ANCSTEMLEN 1 1 0
#=GF ANCLOOPLEN 3 4 3
root            ga--c-------------------------cgcggucac----------g--a
#=GR root SS    ----<-----------------------------<--->---------->---
node1           ua--cga-uuggga-ga-ucgcaaaaaauggguggcgacugcgcga-ucg--u
#=GR node1 SS   ----<<<-<<<--------<<<<-----------<--->>>>>>>>->>>---
X               ca--ccg-gu-gacauc-ucgaguuaaacauguuacaaucucg-ac-cgg-ug
#=GR X SS       ----<<<-<<---------<<<<-----------<--->>>>>->>->>>---
Y               gg--cuguuug-ug-aaagugcaaaaacuggaaggaaauugcacaagcgg--a
#=GR Y SS       ----<<<<<<<--------<<<<-----------<--->>>>>>>>>>>>---
Z               gugaa-------------------------uugauuaaa----------uu-u
#=GR Z SS       ---<<-----------------------------<--->---------->>--
#=GC SS_cons    ...<<<<<<<<........<<<<...........<...>>>>>>>>>>>>>..
//
