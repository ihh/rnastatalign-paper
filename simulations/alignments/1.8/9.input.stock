# STOCKHOLM 1.0
#=GF         NH (X:1,Y:1,Z:1.8)root;
#=GF       ARGS -seed 1240108046 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF       SEED 1240108046
#=GF      PARAM stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF      PARAM lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF       ROOT S-au-L-u-g-u-a-a-u-u-S-cg-L-u-S(ua-gc-gc-cg-cg-L-c-c-g-c-S(L-c-a-g-c)c-c-a-g)c-u
#=GF     BRANCH Length 1.  Loop insert: S(2).  Subst to a: g(1).  Subst to c: u(3).  Subst to cg: au(1).  Subst to g: a(1), c(2), u(1).  Subst to gc: cg(1).  Subst to u: a(1), c(3), g(4).  Subst to ug: cg(1), gc(1), ua(1).  (root -> X)
#=GF       LEAF S-cg-L-u-g-u-c-a-u-u-S-cg-L-c-S(ug-gc-ug-gc-ug-L-c-c-g-c-S(L-u-c-u-u)g-u-a-a)a-g-u-u
#=GF     BRANCH Length 1.  Loop delete: S(1).  Loop insert: a(1).  Stem delete: ug(1).  Subst to a: c(2), g(1), u(3).  Subst to c: u(4).  Subst to cg: gc(1), ua(2), ug(1).  Subst to g: u(2).  Subst to gc: cg(2).  Subst to u: a(1), c(5).  Subst to ua: au(1), gc(1).  Subst to ug: cg(1), ua(1).  (root -> Y)
#=GF       LEAF S-cg-L-c-g-g-a-a-u-c-a-D-D-D-D-D(D-D-D-D-D-D-D-D-D-D-D(D-D-D-D-D)D-D-D-D)D-D-D-D
#=GF     BRANCH Length 1.8.  Loop insert: c(1).  Stem delete: cg(1).  Subst to a: c(2), g(4), u(3).  Subst to au: cg(1), cu(1), gc(1).  Subst to c: a(1), g(1), u(11).  Subst to cg: ua(1), ug(1).  Subst to cu: au(1).  Subst to g: a(4), c(3), u(3).  Subst to gc: gu(1).  Subst to gu: gc(1).  Subst to u: a(1), c(12), g(4).  Subst to ua: au(1).  Subst to ug: au(1).  (root -> Z)
#=GF       LEAF S-cg-L-g-u-u-c-g-a-I-c-c-S-ua-L-g-S(cg-gc-au-cg-D-L-u-u-c-g-S(L-a-a-a-u)a-u-g-a)I-I-a-a
#=GF   ANCSTEMS 4 (total) 3 (nonempty)
#=GF ANCSTEMLEN 0 5 1 1
#=GF ANCLOOPLEN 4 8 3 7
      X         cugucauuccuguguccgcucuuguaagcgcgaguugg
#=GR X       SS <.......<.<<<<<............>>>>>....>>
      Y         ccggaaucag
#=GR Y       SS <........>
      Z         cguucgaccugcgacuucgaaauaugagucgaaag
#=GR Z       SS <........<.<<<<............>>>>..>>

//
