# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.8)root;
#=GF ARGS       -seed 1238504098 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238504098
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-ua-cg-gc-au-gc-gc-cg-cg-gc-L-u-S(cg-cg-L-a-u-a-c-S(ua-L-a-g-a-a-a-g-a-u-u)a-u-a-c)c-a-a-a-a-g
#=GF BRANCH     Length 1.  Loop delete: c(1).  Subst to a: c(1), g(4), u(1).  Subst to au: gc(1).  Subst to c: a(1), u(4).  Subst to ca: cg(1).  Subst to cg: ua(4).  Subst to g: a(4), u(1).  Subst to gc: gu(1).  Subst to gu: au(1).  Subst to u: a(3), c(4).  Subst to ua: au(1), ca(1), cg(1), ug(1).  Subst to ug: cg(1).  (root -> node1)
#=GF NODE       S-cg-cg-gc-cg-gc-gc-cg-cg-gc-L-u-S(cg-ua-L-a-u-g-u-S(ua-L-a-a-a-u-a-a-g-u-D)u-g-a-c)g-a-a-a-c-a
#=GF BRANCH     Length 1.  Loop insert: g(1).  Subst to a: g(2), u(1).  Subst to c: a(1), g(1), u(3).  Subst to cg: gc(1), ua(2).  Subst to g: a(1), u(2).  Subst to u: a(3), c(1), g(1).  Subst to ua: ug(2).  Subst to ug: cg(2).  Subst to uu: cg(1).  (node1 -> X)
#=GF LEAF       S-cg-cg-gc-cg-cg-gc-cg-ua-gc-L-g-S(ua-cg-L-a-c-c-u-S(uu-L-a-a-c-c-a-u-u-u-D)a-g-g-u)a-u-a-a-c-c-a
#=GF BRANCH     Length 1.  Loop delete: g(1).  Loop insert: c(1).  Stem delete: cg(1).  Subst to a: g(3), u(1).  Subst to au: cg(1), gc(1).  Subst to c: a(1), g(1), u(2).  Subst to ca: ua(1).  Subst to cg: ca(1), gc(1), ua(1), ug(1).  Subst to g: a(3), c(1), u(3).  Subst to gc: gu(1).  Subst to gu: gc(1).  Subst to u: a(1), c(2), g(1).  Subst to ua: au(1), cg(3), ug(1).  Subst to ug: cg(1), ua(1).  (node1 -> Y)
#=GF LEAF       S-ua-cg-gc-ua-cg-gc-cg-au-D-L-u-S(ua-ua-L-a-a-c-a-S(cg-L-a-a-g-u-c-a-g-u-D)a-g-a-u)g-I-D-a-c-a-g-a
#=GF BRANCH     Length 1.8.  Stem delete: ua(1).  Stem insert: au(1).  Subst to a: c(2), g(6), u(3).  Subst to au: gc(4), gu(2), ua(3).  Subst to c: a(1), u(2).  Subst to cg: au(1), ua(1), ug(1).  Subst to g: a(6), u(2).  Subst to gc: au(1), cg(1), ua(1).  Subst to gg: cg(1).  Subst to gu: au(1), cg(1), gc(1).  Subst to u: a(3), c(3), g(3).  Subst to ua: au(1), cg(1), gc(1), gg(1), ug(1).  Subst to ug: cg(2).  (root -> Z)
#=GF LEAF       S-au-ua-gc-au-gc-cg-au-cg-D-au-L-a-S(gu-au-L-u-u-a-u-S(au-L-g-a-a-a-a-u-a-u-c)a-u-g-a)u-I-a-a-a-I-a-a
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 1 2 9
#=GF ANCLOOPLEN 9 8 7
root            ucga-ggccguccauacuagaaagauuaauacggc-aaa-agcggcc-ucga
#=GR root SS    <<<<-<<<<<-<<----<--------->---->>-------->>>>>->>>>
node1           ccgc-ggccgucuauguuaaauaagu-augacagg-aaa-cacggcc-gcgg
#=GR node1 SS   <<<<-<<<<<-<<----<--------->---->>-------->>>>>->>>>
X               ccgc-cgcuggucaccuuaaccauuu-uaggugaauaac-cacagcg-gcgg
#=GR X SS       <<<<-<<<<<-<<----<--------->---->>-------->>>>>->>>>
Y               ucgu-cgca-uuuaacacaagucagu-gagauaag--acaga-ugcg-acga
#=GR Y SS       <<<<-<<<<--<<----<--------->---->>--------->>>>->>>>
Z               augagcac-aagauuauagaaaauaucuaugauuu-aaa-aau-gugcucau
#=GR Z SS       <<<<<<<<-<-<<----<--------->---->>-------->->>>>>>>>
#=GC SS_cons    <<<<<<<<<<.<<....<.........>....>>........>>>>>>>>>>
//
