# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:1.8)root;
#=GF ARGS       -seed 1238057503 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238057503
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-au-gu-au-gc-au-gc-gc-gc-gc-gc-gc-cg-gc-ua-L-g-u-u-c-g-g-S(ua-ua-L-u-a-a-u-a-a-u-u)u-a
#=GF BRANCH     Length 1.  Loop delete: u(1).  Loop insert: g(1), u(1).  Subst to a: g(3), u(4).  Subst to au: gc(4), gu(3).  Subst to c: g(2), u(3).  Subst to cg: gc(1), ua(2).  Subst to g: a(4), u(1).  Subst to gc: au(4), cg(1), gu(1).  Subst to gu: cg(1), gc(2).  Subst to u: a(1), c(2).  Subst to ua: gc(1).  Subst to ug: ua(1).  (root -> node1)
#=GF NODE       S-gc-au-gc-au-gc-au-au-ua-gc-au-gc-gc-au-ug-L-D-a-a-g-a-g-c-c-S(cg-cg-L-a-c-g-a-a-a-c-c)u-a
#=GF BRANCH     Length 1.  Loop delete: a(1).  Subst to a: c(1), g(1), u(2).  Subst to ac: gc(1).  Subst to au: ac(1), cg(1), gc(1).  Subst to c: u(2).  Subst to cg: au(1), gc(1), ua(2).  Subst to g: a(1), u(1).  Subst to gc: au(2), cg(1), gu(2), uu(1).  Subst to gu: au(2), cg(1), uu(1).  Subst to u: a(2), c(5), g(2).  Subst to ua: au(1), gc(1), ug(1).  Subst to ug: cg(1).  Subst to uu: au(1), ug(1).  (node1 -> X)
#=GF LEAF       S-gc-ua-gc-gc-gc-au-au-cg-gc-gc-ua-gu-gc-gu-L-D-a-a-u-D-g-a-u-S(cg-gc-L-a-g-a-a-u-u-a-c)u-a
#=GF BRANCH     Length 1.  Loop delete: a(1), u(1).  Loop insert: a(1).  Stem delete: gc(1).  Subst to a: g(2).  Subst to ac: au(1).  Subst to au: gc(2).  Subst to c: g(2), u(2).  Subst to cg: au(1), gc(2).  Subst to g: a(5), c(1), u(2).  Subst to gc: ac(1), au(3).  Subst to gu: gc(1).  Subst to u: a(1), c(3), g(2).  Subst to ua: gc(1), ug(1).  (node1 -> Y)
#=GF LEAF       S-au-au-gc-gc-cg-cg-au-ua-gc-cg-ua-D-gu-ua-L-D-D-u-a-u-c-g-c-c-S(cg-cg-L-a-g-a-u-c-D-c-g)g-g
#=GF BRANCH     Length 1.8.  Loop delete: a(1).  Loop insert: u(1).  Subst to a: c(3), g(1), u(5).  Subst to au: gc(4), gu(4), ua(2).  Subst to c: a(2), g(1), u(3).  Subst to cg: au(1), ua(1).  Subst to g: a(2), u(2).  Subst to ga: gc(1).  Subst to gc: au(4), ga(1), gu(2), ua(2).  Subst to gu: au(2), gc(4).  Subst to u: a(4), c(2), g(3).  Subst to ua: au(1), gc(1), ug(2).  Subst to ug: gc(1), ua(1).  (root -> Z)
#=GF LEAF       S-cg-au-gc-au-gu-gc-au-au-au-gc-ua-cg-gc-cg-L-u-I-a-u-u-I-u-I-g-S(gc-gc-L-c-u-c-c-a-u-a-D-g)a-a
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 2 14
#=GF ANCLOOPLEN 8 8
root            agagaggggggcgug-uuc-g-guuua-auaauuaauaacgccccccucuuu
#=GR root SS    <<<<<<<<<<<<<<---------<<--------->>-->>>>>>>>>>>>>>
node1           gagagaaugaggau-aaga-gccccac-gaaaccgguaguccucauucucuc
#=GR node1 SS   <<<<<<<<<<<<<<---------<<--------->>-->>>>>>>>>>>>>>
X               gugggaacgguggg-aau--gaucgag-aauuaccguaucuaccguucccac
#=GR X SS       <<<<<<<<<<<<<<---------<<--------->>-->>>>>>>>>>>>>>
Y               aaggccaugcu-gu--uaucgccccag-auc-cgggggau-agcauggccuu
#=GR Y SS       <<<<<<<<<<<-<<---------<<--------->>-->>->>>>>>>>>>>
Z               cagaggaaagucgcu-auu-u-gggcuccaua-gccaagcgacuuucuucug
#=GR Z SS       <<<<<<<<<<<<<<---------<<--------->>-->>>>>>>>>>>>>>
#=GC SS_cons    <<<<<<<<<<<<<<.........<<.........>>..>>>>>>>>>>>>>>
//
