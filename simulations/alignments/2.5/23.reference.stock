# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:2.5)root;
#=GF ARGS       -seed 1238426618 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238426618
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-ug-gc-au-gc-gc-L-c-a-S(ua-au-au-cg-cg-cg-L-u-c-a-g-a-c-a-u-a)a-c
#=GF BRANCH     Length 1.  Subst to a: g(1), u(1).  Subst to au: gc(2), gu(1).  Subst to c: g(1).  Subst to cg: gc(2), ua(1), ug(1).  Subst to g: a(3).  Subst to gc: au(2), gu(2), ua(1).  Subst to gu: au(2), gc(1).  Subst to u: c(2).  Subst to ua: cg(1), ug(1).  Subst to ug: cg(1).  (root -> node1)
#=GF NODE       S-ua-gc-gc-cg-cg-L-c-a-S(cg-gc-au-cg-au-cg-L-u-c-g-c-a-u-g-a-a)a-u
#=GF BRANCH     Length 1.  Loop delete: a(2).  Loop insert: c(1).  Subst to a: c(1), g(3), u(2).  Subst to au: gc(1).  Subst to c: u(4).  Subst to cg: gc(1), ua(1), ug(1).  Subst to g: a(1), c(1), u(2).  Subst to gc: cg(1), gu(1).  Subst to gu: au(1).  Subst to u: a(3), c(2), g(2).  Subst to ua: cg(1), ug(2).  Subst to ug: cg(3), ua(1).  (node1 -> X)
#=GF LEAF       S-ua-gc-gc-ug-cg-L-a-D-S(cg-gc-au-ua-au-cg-L-g-c-a-c-u-a-c-c-D-u)a-a
#=GF BRANCH     Length 1.  Loop delete: a(1).  Stem delete: cg(1).  Subst to a: c(1), u(2).  Subst to ac: ag(1).  Subst to ag: ug(1).  Subst to au: cg(2), gu(2).  Subst to c: g(1).  Subst to cg: ug(1).  Subst to g: a(3), u(2).  Subst to gc: ac(1).  Subst to gu: au(1), gc(1).  Subst to u: a(1), c(2), g(1).  Subst to ug: cg(1), ua(1).  (node1 -> Y)
#=GF LEAF       S-gc-au-gc-cg-au-L-u-a-S(D-gc-au-cg-au-au-L-u-g-g-g-a-D-g-I-g-c)a-u
#=GF BRANCH     Length 2.5.  Loop delete: a(1), u(1).  Loop insert: a(1), c(1), g(1).  Subst to a: c(3), g(6), u(5).  Subst to ac: au(1).  Subst to au: gc(4), gu(3), ua(2), ug(1).  Subst to c: g(3), u(12).  Subst to cg: au(1), gc(1), ua(3), ug(5).  Subst to cu: uu(1).  Subst to g: a(6), c(2), u(2).  Subst to gc: ac(1), au(7), cg(1).  Subst to gg: gc(1).  Subst to gu: au(1), cg(1), gc(1), gg(1).  Subst to u: a(6), c(10), g(4).  Subst to ua: cg(3), ug(3).  Subst to ug: cg(8), ua(1).  Subst to uu: au(1), cu(1).  (root -> Z)
#=GF LEAF       S-cg-gc-gc-uu-gc-L-u-a-S(gu-gc-gc-cg-ug-gc-L-c-c-a-u-S(L-c-u-c-u-u-a-c-S-cg-cg-ua-au-au-ua-ua-L-a-a-a-a-u-g-a-D-c)D-u-a-I-u-a)u-u
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 6 5
#=GF ANCLOOPLEN 9 4
root            ugaggcauaacccucag-----------------------------aca-uaggguuaacccucg
#=GR root SS    <<<<<--<<<<<<--------------------------------------->>>>>>-->>>>>
node1           uggcccacgacacucgc-----------------------------aug-aagugucgauggcca
#=GR node1 SS   <<<<<--<<<<<<--------------------------------------->>>>>>-->>>>>
X               ugguca-cgauacgcac-----------------------------uacc-uguaucgaaggcca
#=GR X SS       <<<<<--<<<<<<--------------------------------------->>>>>>-->>>>>
Y               gagcaua-gacaauggg-----------------------------a-g-gcuuguc-auugcuc
#=GR Y SS       <<<<<---<<<<<--------------------------------------->>>>>--->>>>>
Z               cgguguagggcugccaucucuuacccuaauuaaaaugacaauuagg-ua-uacggccuuucuccg
#=GR Z SS       <<<<<--<<<<<<-----------<<<<<<<-------->>>>>>>------>>>>>>-->>>>>
#=GC SS_cons    <<<<<..<<<<<<...........<<<<<<<........>>>>>>>......>>>>>>..>>>>>
//
