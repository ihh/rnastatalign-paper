# STOCKHOLM 1.0
#=GF NH         ((X:1,Y:1):1,Z:2.5)root;
#=GF ARGS       -seed 1238415287 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1238415287
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-gc-cg-gc-cg-cg-ua-ua-au-cg-L-S(ua-au-cg-L-c-g-u-a-u-g)u-a-a-a-g-a
#=GF BRANCH     Length 1.  Loop insert: g(1).  Stem delete: au(1).  Subst to a: c(1), g(3), u(1).  Subst to au: gc(2), ua(1).  Subst to c: g(1).  Subst to cg: ua(1), ug(1).  Subst to g: a(6), u(1).  Subst to gc: au(1).  Subst to u: g(2).  Subst to ua: au(1), cg(2).  Subst to ug: cg(1), ua(1).  (root -> node1)
#=GF NODE       S-gc-D-cg-au-cg-cg-cg-ug-gc-ua-L-S(ua-au-ua-L-c-a-g-a-g-u-a)u-g-a-a-u-g
#=GF BRANCH     Length 1.  Stem insert: au(1).  Subst to a: g(4), u(2).  Subst to aa: ag(1), ua(1).  Subst to ac: aa(1).  Subst to c: a(2).  Subst to cg: gc(1), ua(2), ug(1).  Subst to g: a(3), c(1), u(1).  Subst to gc: gu(1), ua(3), ug(1).  Subst to gu: gc(1).  Subst to ua: au(1), cg(1), ug(1).  Subst to ug: cg(2).  (node1 -> X)
#=GF LEAF       S-gc-D-cg-au-ac-cg-cg-aa-gc-gc-gc-L-S(cg-gc-cg-L-g-a-a-c-g-a-a)a-g-a-c-g-g
#=GF BRANCH     Length 1.  Subst to a: g(2), u(1).  Subst to au: gc(1), gu(1).  Subst to c: g(2), u(1).  Subst to ca: cg(1).  Subst to cg: ug(1).  Subst to g: a(3), u(1).  Subst to gc: au(2), cg(1).  Subst to gu: gc(1), ug(1).  Subst to u: a(1), c(1).  Subst to ua: au(1), ca(1).  Subst to ug: ua(2).  (node1 -> Y)
#=GF LEAF       S-au-D-ua-gc-I-cg-gc-cg-cg-ua-ug-L-S(ua-gc-gu-L-a-a-g-a-g-u-a)g-c-u-g-c-c
#=GF BRANCH     Length 2.5.  Loop insert: L(1), a(1), c(2).  Stem delete: gc(1).  Subst to a: c(1), g(5), u(4).  Subst to aa: uc(1).  Subst to ac: aa(1), gc(2).  Subst to au: gc(3).  Subst to c: a(2), g(1), u(4).  Subst to ca: cg(1).  Subst to cc: ac(2).  Subst to cg: cc(1), gc(2), ua(1), ug(3).  Subst to g: a(6), c(1), u(3).  Subst to gc: ac(1), au(3), cc(1), cg(3), gu(1), ua(3), uu(1).  Subst to gu: au(1), gc(1).  Subst to u: a(3), c(5), g(4).  Subst to ua: au(1), cg(2).  Subst to uc: gc(1).  Subst to ug: ca(1), cg(2), ua(1).  Subst to uu: cg(1).  (root -> Z)
#=GF LEAF       S-gc-gu-ug-D-I-cg-gc-gc-cg-ua-gc-L-u-c-S(gc-gc-cg-L-u-a-a-I-g-g-g-a)u-u-a-a-c-g-a
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 3 10
#=GF ANCLOOPLEN 6 6
root            ggcg-ccuuac--uaccgu-a-ugguaua-aagaguaagg-cgcc
#=GR root SS    <<<<-<<<<<<--<<<-------->>>------->>>>>>->>>>
node1           g-ca-cccugu--uaucagag-uaauaug-aaugacgggg-ug-c
#=GR node1 SS   <-<<-<<<<<<--<<<-------->>>------->>>>>>->>->
X               g-caaccaggg--cgcgaacg-aagcgag-acggcccaggcug-c
#=GR X SS       <-<<<<<<<<<--<<<-------->>>------->>>>>>>>>->
Y               a-ug-cgccuu--uggaagag-uaucagc-ugccgaggcg-ca-u
#=GR Y SS       <-<<-<<<<<<--<<<-------->>>------->>>>>>->>->
Z               ggu--cggcugucggcuaa-gggagccuuaacgacagccg--guc
#=GR Z SS       <<<--<<<<<<--<<<-------->>>------->>>>>>-->>>
#=GC SS_cons    <<<<<<<<<<<..<<<........>>>.......>>>>>>>>>>>
//
