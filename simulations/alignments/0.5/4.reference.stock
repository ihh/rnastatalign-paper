# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:0.5)root;
#=GF ARGS       -seed 1240094550 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240094550
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-cg-gc-gc-ug-cg-gc-L-g-u-c-g-g-S(gc-gc-cg-L-g-a-u)u-g-g-a
#=GF BRANCH     Length 1.  Stem delete: cg(1), ua(1).  Subst to a: g(2), u(1).  Subst to au: gc(1), ug(1).  Subst to c: u(2).  Subst to cg: au(1), ua(1), ug(1).  Subst to g: a(1).  Subst to gc: gu(1).  Subst to gu: gc(1).  Subst to u: c(2), g(1).  Subst to ua: cg(2).  Subst to ug: cg(1).  (root -> X)
#=GF LEAF       S-cg-gc-au-cg-D-gc-L-g-u-c-g-g-S(gc-gc-D-L-a-g-u)a-u-a-a
#=GF BRANCH     Length 1.  Loop delete: g(1).  Subst to a: g(1), u(3).  Subst to ac: au(1).  Subst to au: ac(1), gc(1).  Subst to c: g(1), u(1).  Subst to cg: ug(1).  Subst to g: a(1), u(1).  Subst to gc: cg(1).  Subst to gu: gc(1).  Subst to u: a(2), c(1), g(2).  (root -> Y)
#=GF LEAF       S-cg-gu-au-gc-cg-gc-L-u-g-c-c-u-S(gc-gc-cg-L-g-a-g)a-D-u-a
#=GF BRANCH     Length 0.5.  Loop delete: g(1).  Subst to a: c(1), g(1), u(1).  Subst to au: cg(1).  Subst to c: g(2), u(2).  Subst to cg: ug(1).  Subst to g: a(1), u(1).  Subst to gc: gu(1).  Subst to gu: au(1), gc(2).  Subst to u: a(1), c(3).  (root -> Z)
#=GF LEAF       S-cg-gu-gc-cg-gu-gc-L-D-c-a-g-u-S(gc-gc-cg-L-u-g-u)a-g-g-a
#=GF ANCSTEMS   2 (total) 2 (nonempty)
#=GF ANCSTEMLEN 3 6
#=GF ANCLOOPLEN 3 9
root            cggucggucggggcgaugccuggacggccg
#=GR root SS    <<<<<<.....<<<...>>>....>>>>>>
X               cgac-ggucgggg-agu-ccauaac-gucg
#=GR X SS       <<<<-<.....<<-...->>....>->>>>
Y               cgagcgugccuggcgaggcca-uacgcuug
#=GR Y SS       <<<<<<.....<<<...>>>.-..>>>>>>
Z               cggcgg-caguggcugugccaggacugcug
#=GR Z SS       <<<<<<-....<<<...>>>....>>>>>>
#=GC SS_cons    <<<<<<.....<<<...>>>....>>>>>>
//
