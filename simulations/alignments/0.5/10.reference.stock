# STOCKHOLM 1.0
#=GF NH         (X:1,Y:1,Z:0.5)root;
#=GF ARGS       -seed 1240130275 -sub /nfs/dart/grammars/pfold.eg -sroot -looplen 5 -stemlen 2.33333333333333 -pstem 0.1 /tmp/evolsayer_tree.newick
#=GF SEED       1240130275
#=GF PARAM      stem_prob=0.1 subfile=/nfs/dart/grammars/pfold.eg loop_length=5 stem_length=2.33333333333333
#=GF PARAM      lambda_loop=0.025 mu_loop=0.03 lambda_stem=0.007 mu_stem=0.01
#=GF ROOT       S-gc-ug-cg-au-L-a-u-S(gu-L-a-a-a-S(gc-cg-cg-L-a-a-c-u-a-a)c-c)a-g
#=GF BRANCH     Length 1.  Loop insert: a(1), u(1).  Subst to a: g(1).  Subst to ac: gc(1).  Subst to au: cg(2), gc(1), gu(1).  Subst to c: u(1).  Subst to g: a(1), u(2).  Subst to gc: ac(1), au(1), gu(2).  Subst to gu: au(2), gc(1).  Subst to u: a(2), c(2).  Subst to ua: ug(2).  Subst to ug: cg(1), uu(1).  Subst to uu: gc(1).  (root -> X)
#=GF LEAF       S-ug-ua-au-gc-L-g-g-S(gc-L-a-a-a-u-S(gu-ua-au-L-a-c-c-g-a-a)u-a-u)u-a
#=GF BRANCH     Length 1.  Loop insert: u(1).  Subst to a: c(2), g(3).  Subst to au: gc(1).  Subst to c: u(2).  Subst to cg: ug(1).  Subst to g: a(1), c(1), u(1).  Subst to gc: au(1), gu(1).  Subst to u: a(3), c(1).  Subst to ua: au(1), cg(1).  (root -> Y)
#=GF LEAF       S-gc-cg-cg-gc-L-a-u-a-S(ua-L-a-a-u-I-S(gc-cg-ua-L-a-a-g-a-a-a)a-I-c)u-a
#=GF BRANCH     Length 0.5.  Subst to a: c(1).  Subst to au: cg(1), ug(1).  Subst to cg: gu(1).  Subst to g: a(1).  Subst to u: a(1), c(1).  Subst to ua: cg(1).  (root -> Z)
#=GF LEAF       S-gc-au-cg-au-L-g-u-I-S(ua-L-a-u-a-I-S(gc-au-cg-L-a-a-c-u-a-a)u-I-a)a-g
#=GF ANCSTEMS   3 (total) 3 (nonempty)
#=GF ANCSTEMLEN 3 1 4
#=GF ANCLOOPLEN 6 5 4
root            gucaau-gaaa-gccaacuaaggcc-cuaguggc
#=GR root SS    <<<<..-<...-<<<......>>>.-.>..>>>>
X               uuaggg-gaaauguaaccgaauauuaucuacuag
#=GR X SS       <<<<..-<....<<<......>>>...>..>>>>
Y               gccgauauaau-gcuaagaaaagca-cauacggc
#=GR Y SS       <<<<...<...-<<<......>>>.-.>..>>>>
Z               gacagu-uaua-gacaacuaagucu-aaaguguc
#=GR Z SS       <<<<..-<...-<<<......>>>.-.>..>>>>
#=GC SS_cons    <<<<...<....<<<......>>>...>..>>>>
//
